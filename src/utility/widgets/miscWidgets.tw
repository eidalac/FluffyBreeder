:: misc widgets [nobr widget]

/* **********
 * miscWidgets.tw
 *
 * Package: FluffyBreeder
 * Format: Twine2 (Sugarcube 2)
 *
 *	Various Widgets
 *
 *********** */

/* ***
 *	Call as <<UpdateNextButton>>
 *	Allows for dynamic updating of the next button in the storyCaption (left side-bar) for events that disable the button until user makes a selection
 *** */
<<widget "UpdateNextButton">>
	<<replace "#nextButton">>
		<strong><<link "$nextButton">> /* must use link so spacebar shortcut will work */
			<<if $nextButton != " ">> /* but no effect if nextButton is set to a blank space */
				<<set $ui = "main">>
				<<goto $nextLink>>
			<</if>>
		<</link>></strong>
		<<if $nextButton != " ">>@@.cyan;@@<</if>>
	<</replace>>
<</widget>>


<<widget "CreateSimpleTabs">>

	<head>
	<style>

	div.tab {
		overflow: hidden;
		border: 1px solid #ccc;
		background-color: transparent;
	}

	div.tab button {
		background-color: inherit;
		float: left;
		border: none;
		outline: none;
		cursor: pointer;
		padding: 14px 16px;
		transition: 0.3s;
		font-size: 19px;
	}

	div.tab button:hover {
		background-color: #444;
	}

	div.tab button.active {
		background-color: #777;
	}

	.tabcontent {
		display: none;
		padding: 6px 12px;
		-webkit-animation: fadeEffect 1s;
		animation: fadeEffect 1s;
	}

	@-webkit-keyframes fadeEffect {
		from {opacity: 0;}
		to {opacity: 1;}
	}

	@keyframes fadeEffect {
		from {opacity: 0;}
		to {opacity: 1;}
	}
	</style>
	</head>

<</widget>>

/* ***
 *	Call as <<SidebarDate>>
 *	Displays date for the sidebar
 *** */
<<widget "SidebarDate">>
	<<if $cheatMode>>_Pass<br><</if>>
	<span id="week">''Week $week''</span>
	<br>Week of $month $day, $year
	<<if (_Pass == "Main") && ($cheatMode)>>
		<<set _TWeek = $week>>
		<<textbox "$week" $week>>
		<<link "Apply">>
		<<set $week = Math.trunc(Number($week) || _TWeek)>>
		<<if $week < 1>><<set $week = 1>><</if>>
		<<replace "#week">>''Week $week''<</replace>>
		<</link>>
	<</if>>
	<br>
<</widget>>

/* ***
 *	Call as <<SidebarWeather>>
 *	Displays weather for the sidebar
 *** */
<<widget "SidebarWeather">>
	<<if $weatherToday.severity == 1>>
		//@@.cyan;$weatherToday.name@@//
	<<elseif $weatherToday.severity == 2>>
		//@@.yellow;$weatherToday.name@@//
	<<elseif $weatherToday.severity == 3>>
		//@@.orange;$weatherToday.name@@//
	<<else>>
		//@@.red;$weatherToday.name@@//
	<</if>>
<</widget>>

/* ***
 *	Call as <<SidebarCash>>
 *	Displays case for the sidebar
 *** */
<<widget "SidebarCash">>

	<<cashClamp>>
	<<script>>
		State.variables.costs = Number(Math.clamp(State.variables.costs, 0, 10000000000)).toFixed(2);
	<</script>>

	<span id="cash">
	<<if $cash > 0>>
		@@.yellowgreen;Cash@@
	<<else>>
		__@@.red;Cash@@__
	<</if>>
	| ''¤''$cash
	</span>
	<br>Upkeep | ¤$costs
	<br>
<</widget>>


/* ***
 *  Call as <<fluffyError $fluffy>>
 *
 *	Error handler for fluffies.
 *** */
<<widget "fluffyError">>
	<<if ndef _args[0]>>
		<<run console.log(`ERROR: <<fluffyError _args>>: called with no Fluffy.`)>>
		<<set $fluffyError = true>>
	<<elseif ndef _args[0].ID>>
		<<run console.log(`ERROR: <<fluffyError _args>>: ID is not defined.`)>>
		<<set $fluffyError = true>>
	<<elseif ndef $globalFluffies[_args[0].ID]>>
		<<run console.log(`ERROR: <<fluffyError _args>>: Fluffy ID ${_args[0].ID} is not defined in globalFluffies.`)>>
		<<set $fluffyError = true>>
	<<else>>
		<<if _args[0].ID != $globalFluffies[_args[0].ID].ID>>
			<<run console.log(`ERROR: <<fluffyError _args>>: Fluffy ID ${_args[0].ID} does not match global ID ${$globalFluffies[_args[0].ID].ID}.`)>>

			<<set _args[0].ID = Number($globalFluffies[_args[0].ID].ID).toFixed(0)>>
			<<set $globalFluffies[_args[0].ID] = _args[0]>>
		<</if>>
		<<set $fluffyError = false>>
	<</if>>
<</widget>>

/* ***
 *	Call as <<SidebarFluffies>>
 *	Displays fluffies for the sidebar
 *** */
<<widget "SidebarFluffies">>
	@@.coral;[[Total Fluffies|Fluffy List][$listType = "All"]]@@ | <<print $ourStore.foals + $ourStore.mares + $ourStore.stallions>> /  $ourStore.shelter
	<br>($ourStore.foals @@.lightcoral;Foals@@ $ourStore.mares @@.lightcoral;Mares@@ $ourStore.stallions @@.lightcoral;Stallions@@)
<</widget>>

/* ***
 *	Call as <<SidebarStore>>
 *	Displays store info for the sidebar
 *** */
<<widget "SidebarStore">>
	@@.coral;Store@@
	<br>$ourStore.shelter @@.lightcoral;Shelter@@ |
	$ourStore.display @@.lightcoral;Display@@ |
	$ourStore.space @@.lightcoral;Space@@
<</widget>>


<<widget "SidebarButton">>
	<<if $nextButton == "END WEEK">>
		<span id="endWeekButton"><strong><<link $nextButton $nextLink>><</link>></strong></span> @@.cyan;@@
	<<else>>
		<span id="nextButton"> /* target for miscWidgets' <<UpdateNextButton>> */
			<strong><<link "$nextButton">> /* must use link so spacebar shortcut will work */
				<<if $nextButton != " ">> /* but no effect if nextButton is set to a blank space */
					<<set $ui = "main">>
					<<goto $nextLink>>
				<</if>>
			<</link>></strong>
			<<if $nextButton != " ">>@@.cyan;@@<</if>>
		</span>
	<</if>>
<</widget>>


<<widget flipCase>>
	<<if _args[0] == _args[0].toUpperCase()>><<set _args[0] = _args[0].toLowerCase()>><<else>><<set _args[0] = _args[0].toUpperCase()>><</if>>
<</widget>>


/* ***
 *	Call as <<PlayerStatus>>
 *	Displays player status
 *** */
<<widget "PlayerStatus">>
	@@.coral;Owner Status@@

	<<script>>
		State.variables.actions = Math.clamp(Math.trunc(State.variables.actions), 0, 10);
	<</script>>

	<br>@@.lightcoral; Stamina@@ | 
	<<switch $actions>>
		<<case 10>>
			@@.green;■■■■■■■■■■@@
		<<case 9>>
			@@.green;■■■■■■■■■@@□
		<<case 8>>
			@@.green;■■■■■■■■@@□□
		<<case 7>>
			@@.yellowgreen;■■■■■■■@@□□□
		<<case 6>>
			@@.yellowgreen;■■■■■■@@□□□□
		<<case 5>>
			@@.yellow;■■■■■@@□□□□□
		<<case 4>>
			@@.yellow;■■■■@@□□□□□□
		<<case 3>>
			@@.orange;■■■@@□□□□□□□
		<<case 2>>
			@@.orange;■■@@□□□□□□□□
		<<case 1>>
			@@.red;■@@□□□□□□□□□
		<<case 0>>
			@@.red;□□□□□□□□□□@@
	<</switch>>
	
	<br> @@.lightcoral; Stress@@ | 

	<<script>>
		State.variables.stress = Math.clamp(Math.trunc(State.variables.stress), 0, 200);
	<</script>>

	<<if $stress < 20>>
		@@color:rgb(0,255,0);□□□□□□□□□□@@
	<<elseif $stress < 40>>
		@@color:rgb(23,229,0);■□□□□□□□□□@@
	<<elseif $stress < 60>>
		@@color:rgb(51,204,0);■■□□□□□□□□@@
	<<elseif $stress < 80>>
		@@color:rgb(77,179,0);■■■□□□□□□□@@
	<<elseif $stress < 100>>
		@@color:rgb(102,153,0);■■■■□□□□□□@@
	<<elseif $stress < 120>>
		@@color:rgb(127,128,0);■■■■■□□□□□@@
	<<elseif $stress < 140>>
		@@color:rgb(153,102,0);■■■■■■□□□□@@
	<<elseif $stress < 160>>
		@@color:rgb(179,77,0);■■■■■■■□□□@@
	<<elseif $stress < 180>>
		@@color:rgb(204,51,0);■■■■■■■■□□@@
	<<elseif $stress < 200>>
		@@color:rgb(225,23,0);■■■■■■■■■□@@
	<<else>>
		@@color:rgb(255,0,0);■■■■■■■■■■@@
	<</if>>
	<br>@@.lightcoral; Rep@@ | 
	
	<<script>>
		State.variables.reputation = Math.clamp(Math.trunc(State.variables.reputation), 0, 1000);
	<</script>>

	<<if $reputation > 900>>
		@@color:rgb(0,145,0);prestigious@@
	<<elseif $reputation > 800>>
		@@color:rgb(0,150,0);renowned@@
	<<elseif $reputation > 700>>
		@@color:rgb(0,155,0);famed@@
	<<elseif $reputation > 600>>
		@@color:rgb(0,160,0);celebrated@@
	<<elseif $reputation > 500>>
		@@color:rgb(0,165,0);honored@@
	<<elseif $reputation > 400>>
		@@color:rgb(0,170,0);acclaimed@@
	<<elseif $reputation > 300>>
		@@color:rgb(0,175,0);eminent@@
	<<elseif $reputation > 200>>
		@@color:rgb(0,180,0);prominent@@
	<<elseif $reputation > 100>>
		@@color:rgb(0,185,0);respected@@
	<<elseif $reputation > 90>>
		@@color:rgb(0,190,0);recognized@@
	<<elseif $reputation > 80>>
		@@color:rgb(0,195,0);known@@
	<<elseif $reputation > 70>>
		@@color:rgb(0,200,0);rumored@@
	<<elseif $reputation > 60>>
		@@color:rgb(0,205,0);envied@@
	<<elseif $reputation > 50>>
		@@color:rgb(0,210,0);minor@@
	<<elseif $reputation > 40>>
		@@color:rgb(0,215,0);obscure@@
	<<elseif $reputation > 30>>
		@@color:rgb(0,220,0);reprobate@@
	<<elseif $reputation > 20>>
		@@color:rgb(0,225,0);resented@@
	<<elseif $reputation > 10>>
		@@color:rgb(0,230,0);disliked@@
	<<else>>
		@@color:rgb(0,240,0);unknown@@
	<</if>>
($reputation)

	<<script>>
		State.variables.training = Math.clamp(Math.trunc(State.variables.training), 0, 200);
		State.variables.hugbox = Math.clamp(Math.trunc(State.variables.hugbox), 0, 200);
		State.variables.abuse = Math.clamp(Math.trunc(State.variables.abuse), 0, 200);
	<</script>>

	<br>@@.lightcoral; EXP@@ | $training ( Hugbox $hugbox | Abuse $abuse )
<</widget>>

<<widget "OptionsWidget">>
	<div class="w3-modal-content">
		<header class="w3-container w3-teal"> 
			<span onclick="document.getElementById('id01').style.display='none'" class="w3-button w3-display-topright">&times;</span>
			<h1>Settings</h1>
		</header>
		<div class="w3-container w3-dark-grey">
			<<if ndef $nameType>><<set $nameType = "ordinal">><</if>>
			
			<<if ndef $ordinalString>><<set $ordinalString = "Fluffy">><</if>>
			
			<br>
			<div class="w3-container w3-padding">
				<h2>Auto Naming</h2>
				<div class="w3-container w3-padding">
	
				<label><<radiobutton "$nameType" "ordinal" autocheck>> Ordinal</label>
				<<textbox "_tempString" $ordinalString>>
				<<button "Confirm">>
					<<set _tempString to _tempString.trim()>>

					<<if _tempString is "">>
						<<replace "#textbox-error">>Please enter a string.<</replace>>
					<<elseif _tempString.length > 20>>
						<<replace "#textbox-error">>Text can be no more than 20 characters long.<</replace>>
					<<elseif _tempString.match(/[^0-9]{1,20}/) == null>>
						<<replace "#textbox-error">>Names must have only letters and characters.<</replace>>
					<<else>>
						<<set $ordinalString = _tempString>>
						<<replace "#textbox-error">>Ok, oridnal name set to "<<- $ordinalString>> #".<</replace>>
					<</if>>
				<</button>>
				<span id="textbox-error"></span>
				<br>
				<label disabled>@@#listbutton;<<radiobutton "$nameType" "list" autocheck>>@@ Namelist</label>

	        	</div>
	        	
	        	<<if ndef $inlineSprites>><<set $inlineSprites = "true">><</if>>
	        	
	        	<label><<checkbox "$inlineSprites" false true>>In-line Sprites.  Uncheck to use 'art\sprites3' folder</label>
        	</div>

				<p><<button "Display Variables">><<checkvars>><</button>></p>
				<p><<button "Bug Report">><<bugreport>><</button>></p>
		
				<p>Placholder..</p>
	        	<p>WIP..</p>
        	
			<<timed 5ms>>
				<<run $("#radiobutton-nametype-1").prop( "disabled", true )>>
			<</timed>>
        </div>
        <footer class="w3-container w3-teal">
        	<p>Modal Footer</p>
        </footer>
	</div>
<</widget>>


<<widget "systemButtons">>
	@@#sortbutton;<<button '<i class="fa fa-save"></i> Saves'>><<script>>UI.saves()<</script>><</button>>@@
	
	@@#sortbutton;<<button '<i class="fa fa-power-off"></i> Restart'>><<script>>UI.restart()<</script>><</button>>@@


	<div class="w3-dropdown-hover">
		<button onclick="document.getElementById('id01').style.display='block'" class="w3-button  w3-hover-cyan w3-grey"><i class="fa fa-cogs"></i> Options</button>
	</div>
	<div id="id01" class="w3-modal">
		<<OptionsWidget>>
	</div>
<</widget>>

<<widget "sidebarTop">>
	
	<<script>>UIBar.destroy();<</script>>
	
	<div class="w3-container w3-theme-d2">
		<span id="close-dropdown-btn" class="w3-button w3-display-topright w3-large">X</span>
		<br>
		<div class="w3-padding w3-center">
			<span>Fluffy Breeder</span>
			
			<<iconSprite>>
			
			<<= '<img class="w3-circle responsive" src="' + _iconSprite + '"  alt="avatar" style="width:100px">'>>
		</div>
	</div>
<</widget>>



<<widget "sortButtons">>
	<<set _type = _args[0] || "None">>
	<<set _sortFluffies = []>>
	<<for _id range $ourStore.fluffies>>
		<<set _sortFluffies.push($globalFluffies[_id])>>
	<</for>>
	<div class="dropdown-container w3-left-align w3-hover-cyan w3-grey">
		<button class="dropdown-btn w3-button"><span>Sort</span><i class="fa fa-caret-down"></i></button>
		<div class="dropdown-inner-container w3-hide w3-grey w3-card">
			@@#sortbutton;<<button 'Remove Sort <i class="fa fa-window-close"></i>'>>
				/* Reset sorted filters */
				<<set _sortFluffies = []>>
				<<run console.log($activeFluffy.name)>>
				<<for _id range $ourStore.fluffies>>
					<<if _type != "breeding">>
						<<set _sortFluffies.push($globalFluffies[_id])>>
					<<else>>
						<<run $globalFluffies[_id].gender != $activeFluffy.gender ? _sortFluffies.push($globalFluffies[_id]) : console.log()>>
					<</if>>
				<</for>>
				<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
			<</button>>@@
			<div class="dropdown-container w3-left-align w3-grey" id="subsort-attr-btn">
				<button class="dropdown-btn w3-button"><span>Breed</span><i class="fa fa-caret-down"></i></button>
				<div class="dropdown-inner-container w3-hide w3-white w3-card">
					@@#sortbutton;<<button 'Alicorn <i class="fa fa-sort"></i>'>>
						<<if _type != "breeding">>
							<<set _sortFluffies = _sortFluffies.filter(fluffy => fluffy.breed == "alicorn")>>
						<<else>>
							<<set _sortFluffies = _sortFluffies.filter(fluffy => fluffy.breed == "alicorn" && fluffy.gender != $activeFluffy.gender)>>
						<</if>>
						<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
					<</button>>@@
					@@#sortbutton;<<button 'Earthy <i class="fa fa-sort"></i>'>>
						<<set _sortFluffies = _sortFluffies.filter(fluffy => fluffy.breed == "earthy")>>
						<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
					<</button>>@@
					@@#sortbutton;<<button 'Pegasus <i class="fa fa-sort"></i>'>>
						<<set _sortFluffies = _sortFluffies.filter(fluffy => fluffy.breed == "pegasus")>>
						<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
					<</button>>@@
					@@#sortbutton;<<button 'Unicorn <i class="fa fa-sort"></i>'>>
						<<set _sortFluffies = _sortFluffies.filter(fluffy => fluffy.breed == "unicorn")>>
						<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
					<</button>>@@
				</div>
			</div>
			<<if _type != "breeding">>
				<div class="dropdown-container w3-left-align w3-grey" id="subsort-attr-btn">
					<button class="dropdown-btn w3-button"><span>Gender</span><i class="fa fa-caret-down"></i></button>
					<div class="dropdown-inner-container w3-hide w3-white w3-card">
						@@#sortbutton;<<button 'Male <i class="fa fa-sort"></i>'>>
							<<set _sortFluffies = _sortFluffies.filter(fluffy => fluffy.gender == "male")>>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
						<</button>>@@
						@@#sortbutton;<<button 'Female <i class="fa fa-sort"></i>'>>
							<<set _sortFluffies = _sortFluffies.filter(fluffy => fluffy.gender == "female")>>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
						<</button>>@@
					</div>
				</div>
			<</if>>
			@@#sortbutton;<<button 'Age <i class="fa fa-sort"></i>'>>
				<<if _ageUp == false>>
					<<run _sortFluffies.sort((a, b) => (a.ageWeeks + (a.age * 52)) - (b.ageWeeks + (b.age * 52))) >>
					<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
					<<set _ageUp = true>>
				<<else>>
					<<run _sortFluffies.sort((a, b) => (b.ageWeeks + (b.age * 52)) - (a.ageWeeks + (a.age * 52))) >> 
					<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
					<<set _ageUp = false>>
				<</if>>
			<</button>>@@

			<div class="dropdown-container w3-left-align w3-grey">
				<button class="dropdown-btn w3-button"><span>Stats</span><i class="fa fa-caret-down"></i></button>
				<div class="dropdown-inner-container w3-hide w3-white w3-card">
					@@#sortbutton;<<button 'Strength <i class="fa fa-sort"></i>'>>
						<<if _strUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.strength - b.strength))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _strUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.strength - a.strength))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _strUp = false>>
						<</if>>
					<</button>>@@
					
					@@#sortbutton;<<button 'Energy <i class="fa fa-sort"></i>'>>
						<<if _engUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.energy - b.energy))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _engUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.energy - a.energy))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _engUp = false>>
						<</if>>
					<</button>>@@

					@@#sortbutton;<<button 'Charm <i class="fa fa-sort"></i>'>>
						<<if _chaUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.charm - b.charm))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _chaUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.charm - a.charm))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _chaUp = false>>
						<</if>>
					<</button>>@@

					@@#sortbutton;<<button 'Thinking <i class="fa fa-sort"></i>'>>
						<<if _thiUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.thinking - b.thinking))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _thiUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.thinking - a.thinking))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _thiUp = false>>
						<</if>>
					<</button>>@@

					@@#sortbutton;<<button 'Learning <i class="fa fa-sort"></i>'>>
						<<if _leaUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.learning - b.learning))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _leaUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.learning - a.learning))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _leaUp = false>>
						<</if>>
					<</button>>@@
					
					@@#sortbutton;<<button 'Fertility <i class="fa fa-sort"></i>'>>
						<<if _ferUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.fertility - b.fertility))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _ferUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.fertility - a.fertility))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _ferUp = false>>
						<</if>>
					<</button>>@@
				</div>
			</div>

			<div class="dropdown-container w3-left-align w3-grey" id="subsort-attr-btn">
				<button class="dropdown-btn w3-button"><span>Attributes</span><i class="fa fa-caret-down"></i></button>
				<div class="dropdown-inner-container w3-hide w3-white w3-card">
					@@#sortbutton;<<button 'Trust <i class="fa fa-sort"></i>'>>
						<<if _trustUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.trust - b.trust))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _trustUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.trust - a.trust))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _trustUp = false>>
						<</if>>
					<</button>>@@
					
					@@#sortbutton;<<button 'Training <i class="fa fa-sort"></i>'>>
						<<if _trainingUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.training - b.training))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _trainingUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.training - a.training))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _trainingUp = false>>
						<</if>>
					<</button>>@@

					@@#sortbutton;<<button 'Temperament <i class="fa fa-sort"></i>'>>
						<<if _temperamentUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.temperament - b.temperament))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _temperamentUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.temperament - a.temperament))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _temperamentUp = false>>
						<</if>>
					<</button>>@@

					@@#sortbutton;<<button 'Happiness <i class="fa fa-sort"></i>'>>
						<<if _happyUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.happy - b.happy))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _happyUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.happy - a.happy))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _happyUp = false>>
						<</if>>
					<</button>>@@

					@@#sortbutton;<<button 'Stress <i class="fa fa-sort"></i>'>>
						<<if _stressUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.stress - b.stress))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _stressUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.stress - a.stress))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _stressUp = false>>
						<</if>>
					<</button>>@@
					
					@@#sortbutton;<<button 'Trauma <i class="fa fa-sort"></i>'>>
						<<if _traumaUp == false>>
							<<run _sortFluffies.sort((a, b) => ((a.trauma - b.trauma))) >>
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _traumaUp = true>>
						<<else>>
							<<run _sortFluffies.sort((a, b) => ((b.trauma - a.trauma))) >> 
							<<replace "#fluffy-list">><<FluffyList _type _sortFluffies>><</replace>>
							<<set _traumaUp = false>>
						<</if>>
					<</button>>@@
				</div>
			</div>
		</div>
	</div>
<</widget>>