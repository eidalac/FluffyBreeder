:: fluffy creation widgets [widget nobr]

/* **********
 * fluffyCreationWidgets.tw
 *
 * Package: FluffyBreeder
 * Format: Twine2 (Sugarcube 2)
 *
 *	Contains widgets/macros for generating a fluffy.
 *
 *********** */



/* ***
 *	Base Fluffy Template.
 *	Call as <<BaseFluffy $gender>>
 *
 *	Creates a male or female fluffy from the baseline genome.
 *** */
<<widget "BaseFluffy">>
	<<if ndef _args[0]>>
		<<run console.log(`ERROR: <<BaseFluffy>>: called with no gender.`)>>
		<<set _args = []>>
		<<set _args[0] = "Female">>
		<<set _geneSTR = $grandmotherGene>>
	<</if>>
	
	<<if (_args[0].toUpperCase() == "MALE")>>
		<<set _args[0] = "Male">>
		<<set _geneSTR = $grandfatherGene>>
	<<else>>
		<<set _args[0] = "Female">>
		<<set _geneSTR = $grandmotherGene>>
	<</if>>

	<<set $activeFluffy = {
		name: "Fluffy",
		hasName: false,
		geneString: _geneSTR,
		genes: Genome.fromString(_geneSTR),
		personality: "Cute",
		weekAcquired: 0,
		origin: 0,
		ID: 0,
		sID: 0,
		gender: "",
		length: 33,
		maxLength: 33,
		lengthAdd: 0, 
		height: 19.47,
		maxHeight: 19.47,
		heightMulti: 0.59,
		heightAdd: 0.00,
		weight: 3.135,
		preWeight: 3.135,
		maxWeight: 3.135,
		weightMulti: 0.095,
		maxAge: 10,
		age: 1,
		ageWeeks: 52,  
		maxFertility: 4,
		fertility: 4,
		fertilityAdd: 0,
		maxMaturity: 40,
		maturity: 40,
		maturityAdd: 0,
		breed: "Earthy",
		coatModifer: 0,
		maneModifer: 0,
		eyeModifer: 0,
		cColor: { name:"Violet", hex: "#8F00FF", filter: "filter: invert(16%) sepia(78%) saturate(5967%) hue-rotate(273deg) brightness(92%) contrast(132%)" },
		mColor: { name:"Violet", hex: "#8F00FF", filter: "filter: invert(16%) sepia(78%) saturate(5967%) hue-rotate(273deg) brightness(92%) contrast(132%)" },
		eColor: { name:"Violet", hex: "#8F00FF", filter: "filter: invert(16%) sepia(78%) saturate(5967%) hue-rotate(273deg) brightness(92%) contrast(132%)" },
		colorGroup: [],
		mother: -1,
		father: -1,
		trust: 0,
		training: 0,
		strength: 3,
		energy: 3,
		charm: 3,
		thinking: 3,
		learning: 3,
		coatLengthAdd: 0,
		coatLength: 2,
		coatDensity: 100,
		coatDensityAdd: 10,
		coatCurl: 2,
		subSpecies: 0,
		subSpeciesString: "Standard Fluffy",
		health: 10,
		children: [],
		specialFriend: -1,
		pregnant: false,
		pregnantBy: -1,
		nursing: 0,
		nursingMax: 0,
		onDisplay: false,
		sold: false,
		preOwned: false,
		dead: false,
		weaned: true,
		traits: [],
		foodType: "Kibble",
		foodQuality: 2,
		temperament: 100,
		happy: 0,
		trauma: 0,
		stress: 0,
		furStage: 0
	} >>
<</widget>>

/* ***
 *	Call as <<newFromGene $gene $subspecies>>
 *
 *	Creates a new fluffy from an existing genome. Can force subspecies.
 *** */
<<widget "newFromGene">>
	<<if def _args.length>>
		<<set _subspecies = _args[1] ? _args[1] : _args[0].getSubSpecies()>>
		<<set _l = random(0, 1)>>
		<<set _f = random(0, 1)>>
		<<set _h = random(0, 2) / 100>>
		<<set _m = random(0, 2)>>
		<<set _cl = random(0, 2)>>
		<<set _cd = random(0,30)>>
		<<set _cm = random(0,28)>>
		<<set _mm = random(0,28)>>
		<<set _em = random(0,28)>>

		<<set _L = Number(_args[0].getLength() + _l).toFixed(2)>>
		<<set _H = Number((_args[0].getHeight() + _h) * _L).toFixed(2)>>
		<<set _W = Number(_args[0].getWeight() * _L).toFixed(2)>>

		<<set $activeFluffy = {
			name: "Fluffy",
			hasName: false,
			geneString: _args[0].toString(),
			genes: _args[0],
			personality: "Cute",
			weekAcquired: 0,
			origin: 0,
			ID: -1,
			sID: -1,
			gender: _args[0].getGenderString().toLowerCase(),
			length: Number(randomFloat(_L * 0.85, _L)).toFixed(2),
			maxLength: _L,
			lengthAdd: _l, 
			maxHeight: _H,
			height: Number(randomFloat(_H*0.95,_H)).toFixed(2),
			heightMulti: _args[0].getHeight() + _h,
			heightAdd: _h,
			weight: Number(randomFloat(_W * .79, _W)).toFixed(2),
			maxWeight: _W,
			weightMulti: _args[0].getWeight(),
			maxAge: _args[0].getMaxAge(),
			age: 0,
			ageWeeks: 0,  
			maxFertility: _args[0].getFertility() + _f,
			fertility: _args[0].getFertility() + _f,
			fertilityAdd: _f,
			maxMaturity: _args[0].getMaturity() + _m,
			maturity: _args[0].getMaturity() + _m,
			maturityAdd: _m,
			breed: _args[0].getBreedString().toLowerCase(),
			coatModifer: _cm,
			maneModifer: _mm,
			eyeModifer: _em,
			cColor: _args[0].newCoatColorObject(_cm),
			mColor: _args[0].newManeColorObject(_mm),
			eColor: _args[0].newEyeColorObject(_em),
			colorGroup: [],
			mother: -1,
			father: -1,
			trust: 0,
			training: 0,
			strength: _args[0].getStrong(),
			energy: _args[0].getEnergy(),
			charm: _args[0].getCharm(),
			thinking: _args[0].getThinking(),
			learning: _args[0].getLearning(),
			coatLengthAdd: _cl,
			coatLength: _args[0].getCoatLength() + _cl,
			coatDensityAdd: _cd,
			coatDensity: _args[0].getCoatDensity() + _cd,
			coatCurl: _args[0].getCoatCurl(),
			subSpecies: _subspecies,
			subSpeciesString: _args[0].getSubSpeciesDesc(_subspecies),
			health: 10,
			children: [],
			specialFriend: -1,
			pregnant: false,
			pregnantBy: -1,
			nursing: 0,
			nursingMax: 0,
			onDisplay: false,
			sold: false,
			preOwned: false,
			dead: false,
			weaned: true,
			traits: [],
			foodType: "Kibble",
			foodQuality: 2,
			temperament: 100,
			happy: 0,
			trauma: 0,
			stress: 0,
			furStage: 100
		} >>

		<<set $activeFluffy.preWeight = $activeFluffy.weight>>
		
		<<set _rAge = random($activeFluffy.maturity, ($activeFluffy.maturity*2))>>
		<<set $activeFluffy.age = Math.round(_rAge/52)>>
		<<set $activeFluffy.ageWeeks = Math.max(_rAge-($activeFluffy.age*52), 0)>>

		<<switch $alicornRarity>>
		<<case 0>>
			<<if $activeFluffy.breed.toUpperCase() == "SETTING_DEPENDENT_BREED">>
				<<set $activeFluffy.breed = "alicorn">>
			<</if>>
		<<case 1>>
			<<if $activeFluffy.breed.toUpperCase() == "SETTING_DEPENDENT_BREED">>
				<<if random(0, 1) == 0>>
					<<set $activeFluffy.breed = "unicorn">>
				<<else>>
					<<set $activeFluffy.breed = "pegasus">>
				<</if>>
			<</if>>
		<<default>>
			<<if $activeFluffy.breed.toLowerCase() == "alicorn" or $activeFluffy.breed.toUpperCase() == "SETTING_DEPENDENT_BREED">>
				<<switch random(0, 5)>>
				<<case 0 1>>
					<<set $activeFluffy.breed = "unicorn">>
				<<case 2 3>>
					<<set $activeFluffy.breed = "pegasus">>
				<<case 4>>
					<<set $activeFluffy.breed = "earthy">>
				<<case 5>>
					<<set $activeFluffy.breed = "alicorn">>
				<</switch>>
			<</if>>
		<</switch>>

	<<else>>
		<br><br>@@.red; newFromGene called with no gene.@@<br><br>
	<</if>>
<</widget>>


/* ***
 *	Call as <<setGeneTraits>>
 *
 *	Set genetic traits on $activeFluffy
 *** */
<<widget "setGeneTraits">>

	/* 3 possible 'misc' defects (used to rate general defect severity)*/
	<<set _defectMaxLevel = 1>>
	<<set _defectCount = 0>>
	<<set _defectStack = []>>

	<<set _traitMaxLevel = 1>>
	<<set _traitCount = 0>>
	<<set _traitStack = []>>

	<<set _testGene = "">>
	<<set _gene = 0>>

	/* First count the "W/W" genes, which we use to check the trait levels */
	<<for _gene = 84; _gene <= 124; _gene += 20>>
		<<set _testGene = "">>
		<<set _testGene += $activeFluffy.geneString.substring(_gene, _gene+1)>>
		<<set _testGene += $activeFluffy.geneString.substring(_gene+2,_gene+3)>>

		<<if _testGene === _testGene.toLowerCase()>>
			<<set _defectMaxLevel++>>
		<<elseif _testGene === _testGene.toUpperCase()>>
			<<set _traitMaxLevel++>>
		<</if>>

		<<run console.log(`DEBUG: setGeneTraits: ${_gene} _defectMaxLevel = ${_defectMaxLevel}, _traitMaxLevel = ${_traitMaxLevel}.`)>>
	<</for>>

	<<set _traitIndex = [
		{ gene: 12, name: "Leg" },
		{ gene: 20, name: "Lung" },
		{ gene: 28, name: "Weight" },
		{ gene: 36, name: "Heart" },
		{ gene: 44, name: "Fertility" },
		{ gene: 52, name: "Growth" },
		{ gene: 80, name: "Stomach" },
		{ gene: 100, name: "Mental" },
		{ gene: 120, name: "Eye" }
	] >>

	<<run console.log(`DEBUG: setGeneTraits: _traitIndex ${_traitIndex.length}.`)>>
	<<run console.log(`DEBUG: setGeneTraits: _traitIndex ${_traitIndex}.`)>>

	<<for _index range _traitIndex>>

		<<run console.log(`DEBUG: setGeneTraits: _index ${_index}.`)>>
	
		<<set _gene = _index.gene>>
		<<set _testGene = "">>
		<<set _testGene += $activeFluffy.geneString.substring(_gene, _gene+1)>>
		<<set _testGene += $activeFluffy.geneString.substring(_gene+2,_gene+3)>>

		<<if _testGene === _testGene.toLowerCase()>>
			<<run _defectStack.push(_index.name)>>
		<<elseif _testGene === _testGene.toUpperCase()>>
			<<run _traitStack.push(_index.name)>>
		<</if>>
	<</for>>

	/* Inbreeding; always add this */
	<<set _inbreed = $activeFluffy.geneString.substring(168).split('/')>>
	<<if Number(_inbreed[0]) == Number(_inbreed[1])>>
		<<addTrait "Inbred" $activeFluffy>>
		<<set $activeFluffy.strength -= _defectLevel>>
		<<set $activeFluffy.energy -= _defectLevel>>
		<<set $activeFluffy.charm -= _defectLevel>>
		<<set $activeFluffy.thinking -= _defectLevel>>
		<<set $activeFluffy.learning -= _defectLevel>>
		<<set _defectLevel++>>
		<<set _defectCount++>>
	<</if>>

	/* Fertility, always add this */
	<<if _defectStack.includes("Fertility")>>
		<<set $activeFluffy.fertility -= _defectLevel>>
		<<run _defectStack.delete("Fertility")>>
	<<elseif _traitStack.includes("Fertility")>>
		<<set $activeFluffy.fertility += _traitLevel>>
		<<run _traitStack.delete("Fertility")>>
	<</if>>

	/* Now, pull random things from our stacks of traits and add them: */
	<<for _defectStack.length > 0>>
		/* Pluck a random one: */
		<<run _thisDefect = _defectStack.pluck()>>

		/* Randomize level: */
		<<set _defectLevel = random(1, _defectMaxLevel)>>

		/* reduce the odds for each existing defect: */
		<<if _defectCount > 4 && random(0,100) <= 12>>
			<<continue>>
		<<elseif _defectCount > 3  && random(0,100) <= 25>>
			<<continue>>
		<<elseif _defectCount > 2 && random(0,100) <= 50>>
			<<continue>>
		<<elseif _defectCount > 1 && random(0,100) <= 75>>
			<<continue>>
		<</if>>

		/* Increment the count: */
		<<set _defectCount++>>

		<<run console.log(`DEBUG: setGeneTraits: pushing = ${_thisDefect} defect at level ${_defectLevel}.`)>>

		<<switch _thisDefect>>
			<<case "Leg">>
				<<switch _defectLevel>>
					<<case 1>>
						<<addTrait "Slow" $activeFluffy>>
						<<set $activeFluffy.energy-->>
					<<case 2>>
						<<addTrait "Limp" $activeFluffy>>
						<<set $activeFluffy.energy -= 2>>
						<<set $activeFluffy.strength -= 1>>
					<<case 3>>
						<<addTrait "Lame" $activeFluffy>>
						<<set $activeFluffy.energy  -= 3>>
						<<set $activeFluffy.strength -= 1>>
						<<set $activeFluffy.charm -= 1>>
					<<default>>
						<<addTrait "Crippled" $activeFluffy>>
						<<set $activeFluffy.energy -= 4>>
						<<set $activeFluffy.strength -= 2>>
						<<set $activeFluffy.charm -= 2>>
					<</switch>>
			<<case "Lung">>
				<<switch _defectLevel>>
					<<case 1>>
						<<addTrait "Breathless" $activeFluffy>>
						<<set $activeFluffy.energy-->>
						<<set $activeFluffy.strength-->>
					<<case 2>>
						<<addTrait "Bronchitis" $activeFluffy>>
						<<set $activeFluffy.energy -= 2>>
						<<set $activeFluffy.strength -= 2>>
						<<set $activeFluffy.charm -= 1>>
					<<case 3>>
						<<addTrait "Asthmatic" $activeFluffy>>
						<<set $activeFluffy.energy  -= 3>>
						<<set $activeFluffy.strength -= 3>>
						<<set $activeFluffy.charm -= 2>>
					<<default>>
						<<addTrait "Lung Cancer" $activeFluffy>>
						<<set $activeFluffy.energy -= 4>>
						<<set $activeFluffy.strength -= 4>>
						<<set $activeFluffy.charm -= 3>>
				<</switch>>

			<<case "Weight">>
				<<set _multiplier = Number(Number(10 + _defectLevel) / 10).toFixed(2)>>
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>

				<<switch _defectLevel>>
					<<case 1>>
						<<addTrait "Chubby" $activeFluffy>>
						<<set $activeFluffy.energy-->>
					<<case 2>>
						<<addTrait "Overweight" $activeFluffy>>
						<<set $activeFluffy.energy -= 2>>
						<<set $activeFluffy.strength -= 1>>
					<<case 3>>
						<<addTrait "Fat" $activeFluffy>>
						<<set $activeFluffy.energy  -= 3>>
						<<set $activeFluffy.strength -= 1>>
						<<set $activeFluffy.charm -= 1>>
					<<default>>
						<<addTrait "Obese" $activeFluffy>>
						<<set $activeFluffy.energy -= 4>>
						<<set $activeFluffy.strength -= 2>>
						<<set $activeFluffy.charm -= 2>>
				<</switch>>

			<<case "Heart">>
				<<set _multiplier = Number(Number(10 + _defectLevel) / 8).toFixed(2)>>
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>

				<<switch _defectLevel>>
					<<case 1>>
						<<addTrait "Weak" $activeFluffy>>
						<<set $activeFluffy.energy -= 2>>
						<<set $activeFluffy.strength -= 1>>
					<<case 2>>
						<<addTrait "Feeble" $activeFluffy>>
						<<set $activeFluffy.energy -= 3>>
						<<set $activeFluffy.strength -= 2>>
					<<case 3>>
						<<addTrait "Sickly" $activeFluffy>>
						<<set $activeFluffy.energy -= 4>>
						<<set $activeFluffy.strength -= 3>>
						<<set $activeFluffy.charm -= 1>>
					<<default>>
						<<addTrait "Anemic" $activeFluffy>>
						<<set $activeFluffy.energy -= 4>>
						<<set $activeFluffy.strength -= 4>>
						<<set $activeFluffy.charm -= 2>>
				<</switch>>

			<<case "Growth">>
				<<addTrait "Runt" $activeFluffy>>
				<<set _multiplier = Number(Number(10 - _defectLevel) / 10).toFixed(2)>>
				<<set $activeFluffy.maxLength = Number($activeFluffy.maxLength * _multiplier).toFixed(2)>>
				<<set $activeFluffy.length = Number($activeFluffy.length * _multiplier).toFixed(2)>>
				<<set $activeFluffy.maxHeight = Number($activeFluffy.maxHeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.height = Number($activeFluffy.height * _multiplier).toFixed(2)>>
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>

				<<set $activeFluffy.energy -= Number(_defectLevel)>>
				<<set $activeFluffy.strength -= Number(_defectLevel)>>
				<<set $activeFluffy.charm -= Number(_defectLevel)>>

			<<case "Stomach">>
				<<set _multiplier = Number(Number(10 - _defectLevel) / 8).toFixed(2)>>
	
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>
				
				<<set $activeFluffy.energy -= _defectLevel>>

				<<switch _defectLevel>>
					<<case 1>>
						<<addTrait "Delicate" $activeFluffy>>
						<<set $activeFluffy.thinking -= 1>>
						<<set $activeFluffy.learning -= 1>>
					<<case 2>>
						<<addTrait "Nauseous" $activeFluffy>>
						<<set $activeFluffy.thinking -= 2>>
						<<set $activeFluffy.learning -= 2>>
						<<set $activeFluffy.charm -= 1>>
					<<case 3>>
						<<addTrait "Ulcers" $activeFluffy>>
						<<set $activeFluffy.thinking -= 3>>
						<<set $activeFluffy.learning -= 3>>
						<<set $activeFluffy.charm -= 1>>
					<<default>>
						<<addTrait "Appendicitis" $activeFluffy>>
						<<set $activeFluffy.thinking -= 4>>
						<<set $activeFluffy.learning -= 4>>
						<<set $activeFluffy.charm -= 2>>
				<</switch>>

			<<case "Mental">>
				<<switch _defectLevel>>
					<<case 1>>
						<<addTrait "Silly" $activeFluffy>>
						<<set $activeFluffy.thinking -= 1>>
						<<set $activeFluffy.learning -= 1>>
					<<case 2>>
						<<addTrait "Simple" $activeFluffy>>
						<<set $activeFluffy.thinking -= 2>>
						<<set $activeFluffy.learning -= 2>>
						<<set $activeFluffy.charm -= 1>>
					<<case 3>>
						<<addTrait "Moron" $activeFluffy>>
						<<set $activeFluffy.thinking -= 3>>
						<<set $activeFluffy.learning -= 3>>
						<<set $activeFluffy.charm -= 1>>
					<<default>>
						<<addTrait "Imbecile" $activeFluffy>>
						<<set $activeFluffy.thinking -= 4>>
						<<set $activeFluffy.learning -= 4>>
						<<set $activeFluffy.charm -= 2>>
				<</switch>>

			<<default>> /* eye */
				<<switch _defectLevel>>
					<<case 1>>
						<<addTrait "Nearsighted" $activeFluffy>>
						<<set $activeFluffy.learning -= 1>>
					<<case 2>>
						<<addTrait "Colourblind" $activeFluffy>>
						<<set $activeFluffy.learning -= 2>>
						<<set $activeFluffy.energy -= 1>>
					<<case 3>>
						<<addTrait "Near-Blind" $activeFluffy>>
						<<set $activeFluffy.energy -= 2>>
						<<set $activeFluffy.learning -= 3>>
						<<set $activeFluffy.charm -= 1>>
					<<default>>
						<<addTrait "Blind" $activeFluffy>>
						<<set $activeFluffy.energy -= 3>>
						<<set $activeFluffy.learning -= 4>>
						<<set $activeFluffy.charm -= 2>>
				<</switch>>
		<</switch>>
	<</for>>

	<<for _traitStack.length > 0>>
		/* Pluck a random one: */
		<<run _thisTrait = _traitStack.pluck()>>

		/* Randomize level: */
		<<set _traitLevel = random(1, _traitMaxLevel)>>

		/* reduce the odds for each existing defect: */
		<<if _traitCount > 4 && random(0,100) <= 12>>
			<<continue>>
		<<elseif _traitCount > 3  && random(0,100) <= 25>>
			<<continue>>
		<<elseif _traitCount > 2 && random(0,100) <= 50>>
			<<continue>>
		<<elseif _traitCount > 1 && random(0,100) <= 75>>
			<<continue>>
		<</if>>

		/* Increment the count: */
		<<set _traitCount++>>

		<<run console.log(`DEBUG: setGeneTraits: pushing = ${_thisTrait} defect at level ${_traitCount}.`)>>
		
		<<switch _thisTrait>>
			<<case "Leg">>
				<<switch _traitLevel>>
					<<case 1>>
						<<addTrait "Fast1" $activeFluffy>>
						<<set $activeFluffy.energy++>>
					<<case 2>>
						<<addTrait "Fast2" $activeFluffy>>
						<<set $activeFluffy.energy += 2>>
						<<set $activeFluffy.strength += 1>>
					<<case 3>>
						<<addTrait "Fast3" $activeFluffy>>
						<<set $activeFluffy.energy  += 3>>
						<<set $activeFluffy.strength += 1>>
						<<set $activeFluffy.charm += 1>>
					<<default>>
						<<addTrait "Fast4" $activeFluffy>>
						<<set $activeFluffy.energy += 4>>
						<<set $activeFluffy.strength += 2>>
						<<set $activeFluffy.charm += 2>>
					<</switch>>
			<<case "Lung">>
				<<switch _traitLevel>>
					<<case 1>>
						<<addTrait "Lung1" $activeFluffy>>
						<<set $activeFluffy.energy++>>
						<<set $activeFluffy.strength++>>
					<<case 2>>
						<<addTrait "Lung2" $activeFluffy>>
						<<set $activeFluffy.energy += 2>>
						<<set $activeFluffy.strength += 2>>
						<<set $activeFluffy.charm += 1>>
					<<case 3>>
						<<addTrait "Lung3" $activeFluffy>>
						<<set $activeFluffy.energy  += 3>>
						<<set $activeFluffy.strength += 3>>
						<<set $activeFluffy.charm += 2>>
					<<default>>
						<<addTrait "Lung4" $activeFluffy>>
						<<set $activeFluffy.energy += 4>>
						<<set $activeFluffy.strength += 4>>
						<<set $activeFluffy.charm += 3>>
				<</switch>>

			<<case "Weight">>
				<<set _multiplier = Number(Number(10 - _traitLevel) / 10).toFixed(2)>>
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>

				<<switch _traitLevel>>
					<<case 1>>
						<<addTrait "Weight1" $activeFluffy>>
						<<set $activeFluffy.energy++>>
					<<case 2>>
						<<addTrait "Weight2" $activeFluffy>>
						<<set $activeFluffy.energy += 2>>
						<<set $activeFluffy.strength += 1>>
					<<case 3>>
						<<addTrait "Weight3" $activeFluffy>>
						<<set $activeFluffy.energy  += 3>>
						<<set $activeFluffy.strength += 1>>
						<<set $activeFluffy.charm += 1>>
					<<default>>
						<<addTrait "Weight4" $activeFluffy>>
						<<set $activeFluffy.energy += 4>>
						<<set $activeFluffy.strength += 2>>
						<<set $activeFluffy.charm += 2>>
				<</switch>>

			<<case "Heart">>
				<<set _multiplier = Number(Number(10 + _traitLevel) / 8).toFixed(2)>>
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>

				<<switch _traitLevel>>
					<<case 1>>
						<<addTrait "Heart1" $activeFluffy>>
						<<set $activeFluffy.energy += 2>>
						<<set $activeFluffy.strength += 1>>
					<<case 2>>
						<<addTrait "Heart2" $activeFluffy>>
						<<set $activeFluffy.energy += 3>>
						<<set $activeFluffy.strength += 2>>
					<<case 3>>
						<<addTrait "Heart3" $activeFluffy>>
						<<set $activeFluffy.energy += 4>>
						<<set $activeFluffy.strength += 3>>
						<<set $activeFluffy.charm += 1>>
					<<default>>
						<<addTrait "Heart4" $activeFluffy>>
						<<set $activeFluffy.energy += 4>>
						<<set $activeFluffy.strength += 4>>
						<<set $activeFluffy.charm += 2>>
				<</switch>>

			<<case "Growth">>
				<<addTrait "Growth1" $activeFluffy>>
				<<set _multiplier = Number(Number(10 + _traitLevel) / 10).toFixed(2)>>
				<<set $activeFluffy.maxLength = Number($activeFluffy.maxLength * _multiplier).toFixed(2)>>
				<<set $activeFluffy.length = Number($activeFluffy.length * _multiplier).toFixed(2)>>
				<<set $activeFluffy.maxHeight = Number($activeFluffy.maxHeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.height = Number($activeFluffy.height * _multiplier).toFixed(2)>>
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>

				<<set $activeFluffy.energy += Number(_traitLevel)>>
				<<set $activeFluffy.strength += Number(_traitLevel)>>
				<<set $activeFluffy.charm += Number(_traitLevel)>>

			<<case "Stomach">>
				<<set _multiplier = Number(Number(10 + _traitLevel) / 8).toFixed(2)>>
	
				<<set $activeFluffy.maxWeight = Number($activeFluffy.maxWeight * _multiplier).toFixed(2)>>
				<<set $activeFluffy.weight = Number($activeFluffy.weight * _multiplier).toFixed(2)>>
				
				<<set $activeFluffy.energy += _traitLevel>>

				<<switch _traitLevel>>
					<<case 1>>
						<<addTrait "Stomach1" $activeFluffy>>
						<<set $activeFluffy.thinking += 1>>
						<<set $activeFluffy.learning += 1>>
					<<case 2>>
						<<addTrait "Stomach2" $activeFluffy>>
						<<set $activeFluffy.thinking += 2>>
						<<set $activeFluffy.learning += 2>>
						<<set $activeFluffy.charm += 1>>
					<<case 3>>
						<<addTrait "Stomach3" $activeFluffy>>
						<<set $activeFluffy.thinking += 3>>
						<<set $activeFluffy.learning += 3>>
						<<set $activeFluffy.charm += 1>>
					<<default>>
						<<addTrait "Stomach4" $activeFluffy>>
						<<set $activeFluffy.thinking += 4>>
						<<set $activeFluffy.learning += 4>>
						<<set $activeFluffy.charm += 2>>
				<</switch>>

			<<case "Mental">>
				<<switch _traitLevel>>
					<<case 1>>
						<<addTrait "Mental1" $activeFluffy>>
						<<set $activeFluffy.thinking += 1>>
						<<set $activeFluffy.learning += 1>>
					<<case 2>>
						<<addTrait "Mental2" $activeFluffy>>
						<<set $activeFluffy.thinking += 2>>
						<<set $activeFluffy.learning += 2>>
						<<set $activeFluffy.charm += 1>>
					<<case 3>>
						<<addTrait "Mental3" $activeFluffy>>
						<<set $activeFluffy.thinking += 3>>
						<<set $activeFluffy.learning += 3>>
						<<set $activeFluffy.charm += 1>>
					<<default>>
						<<addTrait "Mental4" $activeFluffy>>
						<<set $activeFluffy.thinking += 4>>
						<<set $activeFluffy.learning += 4>>
						<<set $activeFluffy.charm += 2>>
				<</switch>>

			<<default>> /* eye */
				<<switch _traitLevel>>
					<<case 1>>
						<<addTrait "Eye1" $activeFluffy>>
						<<set $activeFluffy.learning += 1>>
					<<case 2>>
						<<addTrait "Eye2" $activeFluffy>>
						<<set $activeFluffy.learning += 2>>
						<<set $activeFluffy.energy += 1>>
					<<case 3>>
						<<addTrait "Eye3" $activeFluffy>>
						<<set $activeFluffy.energy += 2>>
						<<set $activeFluffy.learning += 3>>
						<<set $activeFluffy.charm += 1>>
					<<default>>
						<<addTrait "Eye4" $activeFluffy>>
						<<set $activeFluffy.energy += 3>>
						<<set $activeFluffy.learning += 4>>
						<<set $activeFluffy.charm += 2>>
				<</switch>>
		<</switch>>
	<</for>>


<</widget>>

/* ***
 *	Call as <<Focus $fluffy>>
 *
 *	Sets the target as $activefluffy.
 *** */
<<widget "Focus">>
	<<if def _args.length>>
		<<set $activeFluffy = _args[0]>>
	<</if>>
<</widget>>

/* ***
 *	Call as <<breedFluffies $parent2, $parent2>>
 *
 *	Creates a new gene from these parrents, then generates a child from that genome.
 *
 *	Sets the resulting child to $activeFluffy
 *** */
<<widget "breedFluffies">>
	<<if _args.length != 2>>
		<br><br>@@.red; breedFluffies called without 2 parents.@@<br><br>
	<</if>>
	
	<<set _mom = _args[0]>>
	<<set _dad = _args[1]>>
	<<set _mom.genes = Genome.fromString(_mom.geneString)>>
	<<set _dad.genes = Genome.fromString(_dad.geneString)>>

	<<if ndef _mom.genes>>
		<br><br>@@.red; breedFluffies: mother has no genes, loading default genes@@<br><br>
		<<set _mom.geneString = $grandmotherGene>>
		<<set _mom.genes = Genome.fromString(_mom.geneString)>>
	<</if>>

	<<if ndef _dad.genes>>
		<br><br>@@.red; breedFluffies: father has no genes, loading default genes@@<br><br>
		<<set _dad.geneString = $grandfatherGene>>
		<<set _dad.genes = Genome.fromString(_dad.geneString)>>
	<</if>>

	<<set $childGene = _mom.genes.breedWithGenome(_dad.genes)>>

	<<newFromGene $childGene>>
	
	/*<<fixColors $activeFluffy>>*/
	<<colorValue>> 
	<<colorGroup $activeFluffy>>
	<<statValue>>

	<<set $activeFluffy.mother = _mom.ID>>
	<<set $activeFluffy.father = _dad.ID>>

	<<set $activeFluffy.age = 0>>
	<<set $activeFluffy.ageWeeks = 0>>
	<<set $activeFluffy.height = Number($activeFluffy.maxHeight * 0.22).toFixed(2)>>
	<<set $activeFluffy.length = Number($activeFluffy.maxLength * 0.22).toFixed(2)>>
	<<set $activeFluffy.weight = Number($activeFluffy.maxWeight * 0.0286).toFixed(3)>>
	<<set $activeFluffy.weaned = false>>
	<<set $activeFluffy.foodType = "Nursing">>
	<<set $activeFluffy.foodQuality = -1>>

	<<set $activeFluffy.ID = $globalFluffies.length>>
	<<run $globalFluffies.push($activeFluffy)>>

	/* Pick a random child trait:*/
	<<switch random(0,5)>>
		<<case 0>>
			<<set $activeFluffy.personaity = "Fussy" >>
			<<set $activeFluffy.strength++>>
			<<set $activeFluffy.temperament = 140>>
			<<set $activeFluffy.happy = 60>>
		<<case 1>>
			<<set $activeFluffy.personaity =  "Shy">>
			<<set $activeFluffy.learning++>>
			<<set $activeFluffy.temperament = 80>>
			<<set $activeFluffy.happy = 80>>
		<<case 2>>
			<<set $activeFluffy.personaity = "Lazy">>
			<<set $activeFluffy.thinking++>>
			<<set $activeFluffy.temperament = 80>>
			<<set $activeFluffy.happy = 80>>
		<<case 3>>
			<<set $activeFluffy.personaity = "Cute">>
			<<set $activeFluffy.charm++>>
			<<set $activeFluffy.temperament = 100>>
			<<set $activeFluffy.happy = 120>>
		<<case 4>>
			<<set $activeFluffy.personaity = "Peppy">>
			<<set $activeFluffy.energy++>>
			<<set $activeFluffy.temperament = 120>>
			<<set $activeFluffy.happy = 100>>
		<<default>>
			<<set $activeFluffy.personaity = "Cute">>
			<<set $activeFluffy.charm++>>
			<<set $activeFluffy.temperament = 120>>
	<</switch>>
<</widget>>




/* ***
 *	Call as <<deadFluffy $fluffy>>
 *
 *	Set a fluffy as dead and remove it, but does not affect the store list
 *** */
<<widget "deadFluffy">>
	<<fluffyError _args[0]>>
	<<if $fluffyError>>
		<<run console.log(`ERROR: <<deadFluffy>>: $fluffyError`)>>
		<<set $fluffyError = false>>
	<<else>>
		<<set _ID = _args[0].ID>>

		<<set $globalFluffies[_ID].dead = true>>
		
		/* Trauma for children */
		<<if $globalFluffies[_ID].nursing > 0>>
			<<for _child range $globalFluffies[_ID].children>>
				<<if $globalFluffies[_child].foodType == "Nursing">>
					<<set $globalFluffies[_child].foodType = "Nothing">>
					<<set $globalFluffies[_child].foodQuality = -1>>
					<<set $globalFluffies[_child].stress += 30>>
					<<set $globalFluffies[_child].trauma += 10>>
					<<set $globalFluffies[_child].happy -= 10>>
				<</if>> /* Close nursing check */
			<</for>> /* Close child check*/
		<</if>> /* Close Nursing check */
		
		/* Trauma for parent */
		<<if $globalFluffies[_ID].foodType == "Nursing">>
			<<set $globalFluffies[$globalFluffies[_ID].mother].nursing-->>
			<<set $globalFluffies[$globalFluffies[_ID].mother].stress += 10>>
			<<set $globalFluffies[$globalFluffies[_ID].mother].trauma += 5>>
			<<set $globalFluffies[$globalFluffies[_ID].mother].happy -= 5>>
			<<set $globalFluffies[$globalFluffies[_ID].father].stress += 10>>
			<<set $globalFluffies[$globalFluffies[_ID].father].trauma += 5>>
			<<set $globalFluffies[$globalFluffies[_ID].father].happy -= 5>>
		<</if>> /* Close Nursing foal check */
		<<set $globalFluffies[_ID].nursing = 0>>
		
		/* Trauma for lovers */
		<<if $globalFluffies[_ID].specialFriend != -1>>
			<<set $globalFluffies[$globalFluffies[_ID].specialFriend].specialFriend = -1>>
			<<set $globalFluffies[$globalFluffies[_ID].specialFriend].stress += 20>>
			<<set $globalFluffies[$globalFluffies[_ID].specialFriend].happy -= 20>>
			<<set $globalFluffies[_ID].specialFriend = -1>>
		<</if>>
	<</if>>
<</widget>>

/* ***
 *	Call as <<removeFluffy $fluffy $action>>
 *
 *	Removes a fluffy from the store.
 *** */
<<widget "removeFluffy">>
	<<fluffyError _args[0]>>
	<<if $fluffyError>>
		<<run console.log(`ERROR: <<removeFluffy>>: $fluffyError`)>>
		<<set $fluffyError = false>>
	<<else>>
		<<set _ID = _args[0].ID>>
		
		<<if _args[1] === "kill">>
			<<deadFluffy _args[0]>>
		<<elseif _args[1] === "sell">>
			<<set $globalFluffies[_ID].sold = true>>
		<</if>>

		<<set $globalFluffies[_ID].onDisplay = false>>

		<<if $globalFluffies[_fl].foodType == "Nursing">>
			<<set $globalFluffies[$globalFluffies[_fl].mother].nursing-->>
		<</if>> /* Close nursing check */

		<<if $globalFluffies[_fl].nursing > 0>>
			<<for _child range $globalFluffies[_fl].children>>
				<<if $globalFluffies[_child].foodType == "Nursing">>
					<<set $globalFluffies[_child].foodType = "Nothing">>
					<<set $globalFluffies[_child].foodQuality = -1>>
				<</if>> /* Close nursing check */
			<</for>> /* Close child check*/
		<</if>> /* Close Nursing check */

		<<set $globalFluffies[_fl].nursing = 0>>

		<<if $globalFluffies[_fl].specialFriend != -1>>
			<<set $globalFluffies[$globalFluffies[_fl].specialFriend].specialFriend = -1>>
			<<set $globalFluffies[$globalFluffies[_ID].specialFriend].stress += 20>>
			<<set $globalFluffies[$globalFluffies[_ID].specialFriend].happy -= 20>>
			<<set $globalFluffies[_fl].specialFriend = -1>>
		<</if>> /* Close special friend check */

		<<run $ourStore.fluffies.delete($globalFluffies[_ID].ID)>>

		<<if Number($globalFluffies[_ID].age) == 0 && Number($globalFluffies[_ID].ageWeeks) <= $globalFluffies[_ID].maturity>>
			<<set $ourStore.foals-->>
		<<elseif $globalFluffies[_ID].gender == "male">>
			<<set $ourStore.stallions-->>
		<<else>>
			<<set $ourStore.mares-->>
		<</if>>
	<</if>>
<</widget>>