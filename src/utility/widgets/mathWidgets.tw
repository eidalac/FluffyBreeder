:: math widgets [nobr widget]

/* **********
 * mathWidgets.tw
 *
 * Package: FluffyBreeder
 * Format: Twine2 (Sugarcube 2)
 *
 *	Widgets for math because I can't trust TWINE to add numbers.
 *
 *********** */


/* ***
 *	Call as <<cashAdd <nubmer>>>
 *	Adds a value (or subtract if negative) to the $cash value.
 *** */
<<widget "cashAdd">>
	
	<<if ndef $args[0]>>
		/* Ignore if there are no args. */
		<<run console.log(`WARNING: <<cashAdd>>: called with no arguments.`)>>
	
	<<elseif isNaN($args[0])>>
		/* Ignore if the arg can't be processed as a number. */
		<<run console.log(`WARNING: <<cashAdd>>: called with a non number ${$args[0]}.`)>>
	
	/* Process the math in java script. */
	<<else>>
		<<script>>
			/* Upper bound check.  Number can be up to 1.8E308, this is about 1.8e50, so under by 250+ orders of magnitude: */
			const maxCash = 180000000000000000000000000000000000000000000000000;

			/* Cast the arg as a number: */
			State.variables.args[0] = Number(State.variables.args[0]).toFixed(2);

			/* Add the value: */
			State.variables.cash = Number(Number(State.variables.cash) + Number(State.variables.args[0])).toFixed(2);

			/* Clamp the value from 0 to maxCash: */
			State.variables.cash = Math.clamp(State.variables.cash, 0, maxCash);

			/* Round to 2 decimal digits: */
			State.variables.cash = Number(State.variables.cash).toFixed(2);
			/* Log if this is somehow NaN: */
			if (isNaN(State.variables.cash))
			{
				console.log(`ERROR: <<cashAdd>>: $cash is NaN after processing (revert to 10.00) ${State.variables.cash}.`);
				State.variables.cash = Number(10).toFixed(2);
			}
		<</script>>
	<</if>>
<</widget>>

/* ***
 *	Call as <<cashMinus <nubmer>>>
 *	Subract a possitive value from the $cash value.
 *** */
<<widget "cashMinus">>
	<<if ndef $args[0]>>
		/* Ignore if there are no args. */
		<<run console.log(`WARNING: <<cashMinus>>: called with no arguments.`)>>
	<<elseif isNaN($args[0])>>
		/* Ignore if the arg can't be processed as a number. */
		<<run console.log(`WARNING: <<cashMinus>>: called with a non number ${$args[0]}.`)>>
	<<elseif Number($args[0]) <= 0>>
		/* Ignore if the arg is set negative: */
		<<run console.log(`WARNING: <<cashMinus>>: called with a negative number ${$args[0]}.`)>>
	<<else>>
		<<script>>
			State.variables.args[0] = Number(Number(0) - Number(State.variables.args[0])).toFixed(2);
		<</script>>
	<</if>>

	<<cashAdd Number($args[0])>>
<</widget>>


/* ***
 *	Call as <<cashClamp>>
 *	does a clamp check on $cash.
 *** */
<<widget "cashClamp">>
	
	/* Process the math in java script. */
	<<script>>
		/* Upper bound check.  Number can be up to 1.8E308, this is about 1.8e50, so under by 250+ orders of magnitude: */
		const maxCash = 180000000000000000000000000000000000000000000000000;

		/* Clamp the value from 0 to maxCash: */
		State.variables.cash = Math.min(Math.max(State.variables.cash, 0), maxCash);

		/* Round to 2 decimal digits: */
		State.variables.cash = Number(State.variables.cash).toFixed(2);

		/* Log if this is somehow NaN: */
		if (isNaN(State.variables.cash))
		{
			console.log(`ERROR: <<cashClamp>>: $cash is NaN after processing (revert to 10.00) ${State.variables.cash}.`);
			State.variables.cash = Number(10).toFixed(2);
		}
	<</script>>
<</widget>>