:: Color Config [widget nobr]

/* **********
 * colorConfig.tw
 *
 * Package: FluffyBreeder
 * Format: Twine2 (Sugarcube 2)
 *
 * Data for color configuration/pricing
 *
 *********** */


  
  
/* ***
 *	Color Value
 *	Call as <<colorValue>>
 *
 *	Caculates the color value of $activeFluffy
 *** */
<<widget "colorValue">>
	<<set _coatTier = "">>
	<<set _maneTier = "">>
	<<set _eyeTier = "">>
	
	<<set _coatGroup = "">>
	<<set _maneGroup = "">>
	<<set _eyeGroup = "">>

	/* Interate through the list of colors, if they match, remember the tier and group.*/
	<<for _i = 0; _i < $colors.length; _i++>>

		<<if $activeFluffy.cColor == $colors[_i].Name>>
			<<set _coatTier = $colors[_i].Tier>>
			<<set _coatGroup = $colors[_i].Group>>
		<</if>>
		<<if $activeFluffy.mColor == $colors[_i].Name>>
			<<set _maneTier = $colors[_i].Tier>>
			<<set _maneGroup = $colors[_i].Group>>
		<</if>>
		<<if $activeFluffy.eColor == $colors[_i].Name>>
			<<set _eyeTier = $colors[_i].Tier>>
			<<set _eyeGroup = $colors[_i].Group>>
		<</if>>
	<</for>>

	/* No matches found, bad*/
	<<if _coatTier == "" || _coatGroup == "">>
		<br>@@.red;No color match found for coat: <<print $activeFluffy.ID>>.
	<</if>>
	<<if _maneTier == "" || _maneGroup == "">>
		<br>@@.red;No color match found for mane: <<print $activeFluffy.ID>>.
	<</if>>
	<<if _eyeTier == "" || _eyeGroup == "">>
		<br>@@.red;No color match found for eye: <<print $activeFluffy.ID>>.
	<</if>>	

	/* One point per tier for eyes, 2 for mane and 3 for coat. */
	<<set _colorBonus = 0>>
	<<set _colorBonus = Number(_eyeTier)>>
	<<set _colorBonus += (2 * _maneTier)>>
	<<set _colorBonus += (3 * _coatTier)>>
	
	/* Divide by 6 to get the multplier (1-6) */
	<<set _colorBonus = Number(_colorBonus / 12).toFixed(2)>>
	
	/* ***
	 *	Complimentary pairs:
	 *		Blue - Orange
	 *		Red - Green
	 *		Yellow - Purple
	 *** */
  
	<<set _pairBonus = 0>>
	
	/* Colors match */
	<<if _coatGroup == _maneGroup>>
		<<if _coatGroup == "Brown">>
			<<set _pairBonus = 0>>
		<<else>>
			<<set _pairBonus = 0.75>>
		<</if>>
	
	/* Complimentary pair */
	<<elseif _coatGroup == "Blue" && _maneGroup == "Orange">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Orange" && _maneGroup == "Blue">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Red" && _maneGroup == "Green">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Green" && _maneGroup == "Red">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Yellow" && _maneGroup == "Purple">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Purple" && _maneGroup == "Yellow">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Brown" && _maneGroup == "Brown">>
		<<set _pairBonus = 0>>
	<</if>>
	<<set $activeFluffy.colorBonus = Number(_colorBonus) + Number(_pairBonus)>>
	
	<<set $activeFluffy.colorBonus = Math.clamp($activeFluffy.colorBonus, 0.05, 5)>>
<</widget>>


/* ***
 *	Limit Color
 *	Call as <<limitValue [low,] high>>
 *
 *	Limits the color tier of a generated fluffy ($activeFluffy) to a value >= low, <= high.
 *	Used to limit the colors you can get from different sources.
 *** */
<<widget "limitColor">>
	<<if ndef(_args)>>
		<<run console.log(`ERROR: <<limitColor>>: Called with no arguments.`)>>
	<<elseif _args.length > 2>>
		<<run console.log(`ERROR: <<limitColor>>: Called with too many arguments.`)>>
	<<else>>
		<<set _wGene = [ "W/w;", "W/W;", "w/W;" ]>>

		/* Some logic/sanity checking: */ 
		<<script>>
			if (state.temporary.args.length == 1)
			{
				State.temporary.high = Number(Math.max(state.temporary.args[0], 6));
				State.temporary.low = Number(Math.min(state.temporary.args[0], 1));
			}
			else
			{
				State.temporary.high = Number(Math.max(state.temporary.args[0], state.temporary.args[1], 6));
				State.temporary.low = Number(Math.min(state.temporary.args[0], state.temporary.args[1], 1));
			}
		<</script>>

		/* Ignor eyes, only look at coat and mane */
		<<set _nColors = clone($colors)>>

		/* Interate through the list of colors, if they match, remember the tier and group.*/
		<<run _nColors.deleteWith(function (val) { 	return val.Tier < _low; })>>
		<<run _nColors.deleteWith(function (val) { 	return val.Tier > _high; })>>

		/* Now we have an arry for colors that are within the specified ranges.*/
	
		/*  	have to set the genes... */
		<<set _randomCoat = _nColors.random()>>
		<<set _randomMane = _nColors.random()>>

		<<run $activeFluffy.genes.setManeColor(_randomMane.Gene + _wGene.random())>>
		<<run $activeFluffy.genes.setCoatColor(_randomCoat.Gene + _wGene.random())>>
		<<run $activeFluffy.genes.setEyeColor(_nColors.random().Gene + _wGene.random())>>

		<<set $activeFluffy.geneString = $activeFluffy.genes.toString()>>

		<<set $activeFluffy.mColor = $activeFluffy.genes.getManeColorString()>>
		<<set $activeFluffy.cColor = $activeFluffy.genes.getCoatColorString()>>
		<<set $activeFluffy.eColor = $activeFluffy.genes.getEyeColorString()>>
	<</if>>
	
<</widget>>

/* ***
 *	Color Group
 *	Call as <<colorGroup $fluffy>>
 *
 *	Finds the color group of $fluffy)
 *** */
<<widget "colorGroup">>
	<<fluffyError _args[0]>>
	<<if $fluffyError>>
		<<run console.log(`ERROR: <<colorGroup>>: $fluffyError`)>>
		<<set $fluffyError = false>>
	<<else>>
		<<if _args[0] != 0>>
			<<set _fluffy = _args[0]>>
		<<else>>
			<<set _fluffy = $activeFluffy>>
		<</if>>
		<<set _coatGroup = "">>
		<<set _maneGroup = "">>
		<<set _eyeGroup = "">>
		
		/* Interate through the list of colors, if they match, remember the tier and group.*/
		<<for _i = 0; _i < $colors.length; _i++>>
			<<if _fluffy.cColor == $colors[_i].Name>>
				<<set _coatGroup = $colors[_i].Group>>
			<</if>>
			<<if _fluffy.mColor == $colors[_i].Name>>
				<<set _maneGroup = $colors[_i].Group>>
			<</if>>
			<<if _fluffy.eColor == $colors[_i].Name>>
				<<set _eyeGroup = $colors[_i].Group>>
			<</if>>
		<</for>>

		/* No matches found, bad*/
		<<if _coatGroup == "">>
			<br>@@.red;No color match found for coat: <<print _fluffy.ID>>.
		<</if>>
		<<if _maneGroup == "">>
			<br>@@.red;No color match found for mane: <<print _fluffy.ID>>.
		<</if>>
		<<if _eyeGroup == "">>
			<br>@@.red;No color match found for eye: <<print _fluffy.ID>>.
		<</if>>	
		<<set _fluffy.colorGroup = [_coatGroup, _maneGroup, _eyeGroup]>>
	<</if>>
<</widget>>