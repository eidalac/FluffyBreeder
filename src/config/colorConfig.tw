:: Color Config [widget nobr]

/* **********
 * colorConfig.tw
 *
 * Package: FluffyBreeder
 * Format: Twine2 (Sugarcube 2)
 *
 * Data for color configuration/pricing
 *
 *********** */


  
  
/* ***
 *	Color Value
 *	Call as <<colorValue>>
 *
 *	Caculates the color value of $activeFluffy
 *** */
<<widget "colorValue">>
	<<set _coatTier = "">>
	<<set _maneTier = "">>
	<<set _eyeTier = "">>
	
	<<set _coatGroup = "">>
	<<set _maneGroup = "">>
	<<set _eyeGroup = "">>
	
<<run console.log("Color Test 0: " + $activeFluffy.cColor + " " + $activeFluffy.mColor + " " + $activeFluffy.eColor)>>
	
	/* Interate through the list of colors, if they match, remember the tier and group.*/
	<<for _i = 0; _i < $Colors.length; _i++>>
/*<<run console.log("Color Test 0.1: " + $activeFluffy.cColor + " " + $Colors[_i].Name)>>*/
		<<if $activeFluffy.cColor == $Colors[_i].Name>>
			<<set _coatTier = $Colors[_i].Tier>>
			<<set _coatGroup = $Colors[_i].Group>>
		<</if>>
		<<if $activeFluffy.mColor == $Colors[_i].Name>>
			<<set _maneTier = $Colors[_i].Tier>>
			<<set _maneGroup = $Colors[_i].Group>>
		<</if>>
		<<if $activeFluffy.eColor == $Colors[_i].Name>>
			<<set _eyeTier = $Colors[_i].Tier>>
			<<set _eyeGroup = $Colors[_i].Group>>
		<</if>>
	<</for>>
/*<<run console.log("Color Test 1: " + _coatTier + " " + _maneTier + " " + _eyeTier)>>*/
	/* No matches found, bad*/
	<<if _coatTier == "" || _coatGroup == "">>
		<br>@@.red;No color match found for coat: <<print $activeFluffy.ID>>.
	<</if>>
	<<if _maneTier == "" || _maneGroup == "">>
		<br>@@.red;No color match found for mane: <<print $activeFluffy.ID>>.
	<</if>>
	<<if _eyeTier == "" || _eyeGroup == "">>
		<br>@@.red;No color match found for eye: <<print $activeFluffy.ID>>.
	<</if>>	

	/* One point per tier for eyes, 2 for mane and 3 for coat. */
	<<set _colorBonus = 0>>
	<<set _colorBonus = Number(_eyeTier)>>
	<<set _colorBonus += (2 * _maneTier)>>
	<<set _colorBonus += (3 * _coatTier)>>
	
	/* Divide by 6 to get the multplier (1-6) */
	<<set _colorBonus = Number(_colorBonus / 12).toFixed(2)>>
/*<<run console.log("Color Test 2: " + _colorBonus)>>*/

	/* ***
	 *	Complimentary pairs:
	 *		Blue - Orange
	 *		Red - Green
	 *		Yellow - Purple
	 *** */
  
	<<set _pairBonus = 0>>
	
	/* Colors match */
	<<if _coatGroup == _maneGroup>>
		<<if _coatGroup == "Brown">>
			<<set _pairBonus = 0>>
		<<else>>
			<<set _pairBonus = 0.75>>
		<</if>>
	
	/* Complimentary pair */
	<<elseif _coatGroup == "Blue" && _maneGroup == "Orange">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Orange" && _maneGroup == "Blue">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Red" && _maneGroup == "Green">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Green" && _maneGroup == "Red">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Yellow" && _maneGroup == "Purple">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Purple" && _maneGroup == "Yellow">>
		<<set _pairBonus = 0.5>>
	<<elseif _coatGroup == "Brown" && _maneGroup == "Brown">>
		<<set _pairBonus = 0>>
	<</if>>
/*<<run console.log("Color Test 3: " + _pairBonus)>>*/
	<<set $activeFluffy.colorBonus = Number(_colorBonus) + Number(_pairBonus)>>
	
	/* Trending to high, try cutting down by 1 point overall.*/
	/*<<set $activeFluffy.colorBonus-->>*/
/*<<run console.log("Color Test 4: " + $activeFluffy.colorBonus )>>*/
<</widget>>


/* ***
 *	Limit Color
 *	Call as <<limitValue [low,] high>>
 *
 *	Limits the color tier of a generated fluffy ($activeFluffy) to a value >= low, <= high.
 *	Used to limit the colors you can get from different sources.
 *** */
<<widget "limitColor">>
	<<if !$args.length>>
		<<run console.log("Limit Color called with no arguments.")>>
	<<elseif $args.length > 2>>
		<<run console.log("Limit Color called with too many arguments.")>>
	<</if>>
<<run console.log("Color Change test 0: " + $args[0] + " " + $args[1])>>
	/* Some logic/sanity checking: */ 
	<<if $args.length == 1>>	
		<<set _low = 1>>
		<<set _high = $args[0]>>
	<<elseif $args[0] < $args[1]>>
		<<set _low = $args[0]>>
		<<set _high = $args[1]>>
	<<else>>
		<<set _low = $args[1]>>
		<<set _high = $args[0]>>
	<</if>>
	
	<<if _high > 6>>
		<<set _high = 6>>
	<</if>>
	
	<<if _low < 1>>
		<<set _low = 1>>
	<</if>>
<<run console.log("Color Change test 1: " + _low + " " + _high)>>
	/* Ignor eyes, only look at coat and mane */
	<<set _nColors = clone($Colors)>>
<<run console.log("Color Change test 2: " + _nColors.length)>>

	/* Interate through the list of colors, if they match, remember the tier and group.*/
	<<run _nColors.deleteWith(function (val) { 	return val.Tier < _low; })>>
	<<run _nColors.deleteWith(function (val) { 	return val.Tier > _high; })>>

<<run console.log("Color Change test 2: " + _nColors.length)>>
	/* Now we have an arry for colors that are within the specified ranges.*/
	
	/*  	have to set the genes... */
 	<<set _randomCoat = _nColors.random()>>
	<<set _randomMane = _nColors.random()>>

/* 
<<run console.log("Color Change test 0: " + $activeFluffy.cColor)>>
<<run console.log("Color Change test 0: " + $activeFluffy.mColor)>>
<<run console.log("Color Change test 0: " + _randomCoat.Name + " " + _randomCoat.Tier)>>
<<run console.log("Color Change test 0: " + _randomMane.Name + " " + _randomMane.Tier)>>
*/

	<<run $activeFluffy.genes.setManeColor(_randomMane.Gene)>>
	<<run $activeFluffy.genes.setCoatColor(_randomCoat.Gene)>>
	<<run $activeFluffy.genes.setEyeColor(_nColors.random().Gene)>>

	<<set $activeFluffy.geneString = $activeFluffy.genes.toString()>>
	<<set $activeFluffy.mColor = $activeFluffy.genes.getManeColorString()>>
	<<set $activeFluffy.cColor = $activeFluffy.genes.getCoatColorString()>>
	<<set $activeFluffy.eColor = $activeFluffy.genes.getEyeColorString()>>
	

<<run console.log("Color Change test 1: " + $activeFluffy.cColor)>>
<<run console.log("Color Change test 1: " + $activeFluffy.mColor)>>
	
<</widget>>




/* ***
 *	Color Group
 *	Call as <<colorGroup>>
 *
 *	finds the color group of ($activeFluffy)
 *** */
<<widget "colorGroup">>

	<<set _coatGroup = "">>
	<<set _maneGroup = "">>
	<<set _eyeGroup = "">>
	
	/* Interate through the list of colors, if they match, remember the tier and group.*/
	<<for _i = 0; _i < $Colors.length; _i++>>
		<<if $activeFluffy.cColor == $Colors[_i].Name>>
			<<set _coatGroup = $Colors[_i].Group>>
		<</if>>
		<<if $activeFluffy.mColor == $Colors[_i].Name>>
			<<set _maneGroup = $Colors[_i].Group>>
		<</if>>
		<<if $activeFluffy.eColor == $Colors[_i].Name>>
			<<set _eyeGroup = $Colors[_i].Group>>
		<</if>>
	<</for>>

	/* No matches found, bad*/
	<<if _coatGroup == "">>
		<br>@@.red;No color match found for coat: <<print $activeFluffy.ID>>.
	<</if>>
	<<if _maneGroup == "">>
		<br>@@.red;No color match found for mane: <<print $activeFluffy.ID>>.
	<</if>>
	<<if _eyeGroup == "">>
		<br>@@.red;No color match found for eye: <<print $activeFluffy.ID>>.
	<</if>>	

	<<set $activeFluffy.colorGroup = [_coatGroup, _maneGroup, _eyeGroup]>>

<</widget>>