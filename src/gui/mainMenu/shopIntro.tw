:: Shop Intro [nobr]

/* **********
 * shopIntro.tw
 *
 * Package: FluffyBreeder
 * Format: Twine2 (Sugarcube 2)
 *
 * Setup configuration for the player store
 *
 *********** */


/* ***
 *	Configure prices based on the dificulty settings selected on the prior card.
 *** */
<<switch $economy>>
	<<case 0>>
	<<set _cosMulti = 1>>
	<<case 1>>
	<<set _cosMulti = 1.25>>
	<<case 2>>
	<<set _cosMulti = 1.75>>
<</switch>>

<<set $basePrice = { earthy: 0.50, unicorn: 0.75, pegasus: 0.75, alicorn: Number(2 + (($alicornMonster + $alicornRarity) / 4)).toFixed(2) }>>
<<set $priceTeir = { mill: Number(1*_cosMulti).toFixed(2), mart: Number(40*_cosMulti).toFixed(2), deluxe: Number(800*_cosMulti).toFixed(2) }>>
<<set $earthPrice = { mill: Number($basePrice.earthy*$priceTeir.mill).toFixed(2), mart: Number($basePrice.earthy*$priceTeir.mart).toFixed(2), deluxe: Number($basePrice.earthy*$priceTeir.deluxe).toFixed(2) }>>
<<set $unicornPrice = { mill: Number($basePrice.unicorn*$priceTeir.mill).toFixed(2), mart: Number($basePrice.unicorn*$priceTeir.mart).toFixed(2), deluxe: Number($basePrice.unicorn*$priceTeir.deluxe).toFixed(2) }>>
<<set $pegasusPrice = { mill: Number($basePrice.pegasus*$priceTeir.mill).toFixed(2), mart: Number($basePrice.pegasus*$priceTeir.mart).toFixed(2), deluxe: Number($basePrice.pegasus*$priceTeir.deluxe).toFixed(2) }>>
<<set $alicornPrice = { mill: Number($basePrice.alicorn*$priceTeir.mill).toFixed(2), mart: Number($basePrice.alicorn*$priceTeir.mart).toFixed(2), deluxe: Number($basePrice.alicorn*$priceTeir.deluxe).toFixed(2) }>>



<br>You will need a location to house, breed and sell fluffies.
<br>
<br>What kind of shop will you start with?
<br>

/* Add 100 cash so it's impossible to start with 0, so you can always buy at least a few fluffies. */
<span id = "shop_cash"><br>You have @@.cyan; $storePoints.@@ points left.
<br>Remaining points will become ¤<<print $storePoints+100>> cash.
<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.
</span>


/* Set a name for the store. */
<br>

<span id="shop-name">
	Your store is named <<print $ourStore.name>>.
</span>

<div id="name-form">
	<br><<textbox "$ourStore.name" $ourStore.name "Shop Intro">>
	<<button "Rename">>
		<<set $ourStore.name to $ourStore.name.trim()>>
		<<replace "#shop-name">>Your store is named <<print $ourStore.name>>.<</replace>>
<</button>>
/* Form for error message to display*/
<span id="form-error"></span>
</div>

/* Set a name for the player. */
<br>

<<set $title = "Ownah">>
<<set $titleList = ["Ownah", "Mistah", "Wady", "Daddeh", "Hoomin", "Mummah" ]>>

<<set $title = $titleList.random()>>

<span id="player-name">
	Fluffies will call you <<print $title>>.
</span>

<div id="title-form">
	<br><<textbox "$title" $title "Shop Intro">>
	<<button "Rename">>
		<<set $title to $title.trim()>>
		<<replace "#player-name">>Fluffies will call you <<print $title>>.<</replace>>
<</button>>
/* Form for error message to display*/
<span id="title-error"></span>
</div>



/* ***
 *	Store stat selection
 *	Could not find a way to macro this due to the different variables/names - probably can be cleaned up but I couldn't figure that out.
 *
 *	Has options to buy/sell 1 or 10 units at a time in each stat and updates the display to show the selected value.
 *
 * TODO: BETA:  Place some sanity limits on how high any stat can go.
 *
  *	Limit to 750 for the time being.
 *** */
 
 /* Space, used for upgrade to the store */
<br>
<br>Space: <span id="stats-space"><<print $ourStore.space>></span> How much space you have for upgrades. 
( <<link "[+]">><<if $storePoints > 0 && $ourStore.space < 750>><<set $storePoints-->><<set $ourStore.space++>><</if>><<replace "#stats-space">><<print $ourStore.space>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> \
| <<link "[-]">><<if $ourStore.space > 0>><<set $storePoints++>><<set $ourStore.space-->><</if>><<replace "#stats-space">><<print $ourStore.space>><</replace>><<replace "#shop_cash">><span id = "shop_cash"><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.</span><</replace>><</link>> )
( <<link "[+10]">><<if $storePoints > 9 && $ourStore.space < 741>><<set $storePoints -= 10>><<set $ourStore.space +=10>><</if>><<replace "#stats-space">><<print $ourStore.space>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> \
| <<link "[-10]">><<if $ourStore.space > 9>><<set $storePoints +=10>><<set $ourStore.space -=10>><</if>><<replace "#stats-space">><<print $ourStore.space>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> )

/* Shelter, controls the maximum fluffy population you can support */
<br>
<br>Shelter: <span id="stats-shelter"><<print $ourStore.shelter>></span> How many adult fluffies you can hold.
( <<link "[+]">><<if $storePoints > 0&& $ourStore.shelter < 750>><<set $storePoints-->><<set $ourStore.shelter++>><</if>><<replace "#stats-shelter">><<print $ourStore.shelter>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> \
| <<link "[-]">><<if $ourStore.shelter > 0>><<set $storePoints++>><<set $ourStore.shelter-->><</if>><<replace "#stats-shelter">><<print $ourStore.shelter>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> )
( <<link "[+10]">><<if $storePoints > 9 && $ourStore.shelter < 741>><<set $storePoints -= 10>><<set $ourStore.shelter +=10>><</if>><<replace "#stats-shelter">><<print $ourStore.shelter>><</replace>>
<<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> \
| <<link "[-10]">><<if $ourStore.shelter > 9>><<set $storePoints +=10>><<set $ourStore.shelter -=10>><</if>><<replace "#stats-shelter">><<print $ourStore.shelter>><</replace>>
<<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> )

/* Display, controls how many fluffies you can have for sale during a week */
<br>
<br>Display: <span id="stats-display"><<print $ourStore.display>></span> How many fluffies you can have for sale at once.
( <<link "[+]">><<if $storePoints > 0 && $ourStore.display < 750>><<set $storePoints-->><<set $ourStore.display++>><</if>><<replace "#stats-display">><<print $ourStore.display>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> \
| <<link "[-]">><<if $ourStore.display > 0>><<set $storePoints++>><<set $ourStore.display-->><</if>><<replace "#stats-display">><<print $ourStore.display>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> )
( <<link "[+10]">><<if $storePoints > 9 && $ourStore.display < 741>><<set $storePoints -= 10>><<set $ourStore.display +=10>><</if>><<replace "#stats-display">><<print $ourStore.display>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> \
| <<link "[-10]">><<if $ourStore.display > 9>><<set $storePoints +=10>><<set $ourStore.display -=10>><</if>><<replace "#stats-display">><<print $ourStore.display>><</replace>><<replace "#shop_cash">><br>You have @@.cyan; $storePoints.@@ points left.<br>Remaining points will become ¤<<print $storePoints+100>> cash.<br>Weekly upkeep will be ¤<<print $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2)>>.<</replace>><</link>> )

/* ***
 *	Move to the next card, setting cash remaining
 *** */
/*<br><br>[[Get Fluffies|Fluffy Intro][$cash = Number($storePoints + 100)]]*/

<br><br>[[To The Shop|Week Start][$cash = Number($storePoints + 100), $costs = Number(($ourStore.display+$ourStore.shelter+$ourStore.space) / 5).toFixed(2), $encyclopedia = "Running your Store"]]


