:: End Week [nobr]

/* **********
 * endWeek.tw
 *
 * Package: FluffyBreeder
 * Format: Twine2 (Sugarcube 2)
 *
 * This runs on the end of the week, so triggers time advacement, status updates and random events.
 *
 *********** */

<div class="w3-row w3-container w3-mobile">

<<set $nextButton to "CONTINUE", $nextLink to "Event Main", $showEncyclopedia = 0>>

/* ***
 *	Base expenses
 *** */
<<set $costs = 0>>
<<set $costs = Number(Number($costs) + Number($ourStore.display))>>
<<set $costs = Number(Number($costs) + Number($ourStore.shelter))>>
<<set $costs = Number(Number($costs) + Number($ourStore.space))>>
<<set $costs = Number(Number($costs) / Number(50)).toFixed(2)>>

<<if $ourStore.upgrades.includes("Deluxe Toys")>>
	<<set $costs = Number(Number($costs) + Number(1))>>
<</if>>
<<if $ourStore.upgrades.includes("Fancy Toys")>>
	<<set $costs = Number(Number($costs) + Number(1))>>
<</if>>
<<if $ourStore.upgrades.includes("Basic Toys")>>
	<<set $costs = Number(Number($costs) + Number(1))>>
<</if>>

<<if $ourStore.upgrades.includes("Deluxe Training Equipment") || $ourStore.upgrades.includes("Fancy Training Equipment") || $ourStore.upgrades.includes("Basic Training Equipment")>>
	<<set $costs += 1>>
<</if>>

/* moving the count updates to here, to prevent double loops */
<<set $ourStore.stallions = 0>>
<<set $ourStore.mares = 0>>
<<set $ourStore.foals = 0>>

<<set _feedCost = 0>>
<<set _stressor = 1.00>>

<<set $stressUp = 0>> 

/* clear event queues */
<<set $eventList = []>>

<<set $eventMating = []>>
<<set $eventBirths = []>>
<<set $eventBirthRejection = []>>
<<set $eventCustomer = []>>
<<set $eventStress = []>>
<<set $eventStarvation = []>>
<<set $customerCards = []>>


<<set $autoSell = false>>

/* ***
 *	Update counts for the sidebar
 *** */
<<for _ef range $ourStore.fluffies>>

	<<set $activeFluffy = $globalFluffies[_ef]>>

	<<if ndef $activeFluffy>>
		<<run console.log(`ERROR: [endWeek.tw]: ID in store does not exist in globalFluffies: ${_ef}.`)>>
		<<run $ourStore.fluffies.delete(_ef)>>
		<<continue>>
	<</if>>

	<<if $activeFluffy.ID != _ef>>
		<<run console.log(`ERROR: [endWeek.tw]: Invalid ID found: ${$activeFluffy.ID}, Should be ${_ef}.`)>>
		<<run $ourStore.fluffies.delete(_ef)>>
		<<continue>>
	<</if>>
	
	<<if $activeFluffy.dead == true>>
		<<run console.log(`ERROR: [endWeek.tw]: dead fluffy found: ${$activeFluffy.ID}, Should be ${_ef}.`)>>
		<<run $ourStore.fluffies.delete(_ef)>>
		<<continue>>
	<</if>>

	<<if $activeFluffy.sold == true>>
		<<run console.log(`ERROR: [endWeek.tw]: sold fluffy found: ${$activeFluffy.ID}, Should be ${_ef}.`)>>
		<<run $ourStore.fluffies.delete(_ef)>>
		<<continue>>
	<</if>>

	<<if $activeFluffy.dueDate > 7>>
		<<run console.log(`ERROR: [endWeek.tw]: invalid due date: ${$activeFluffy.dueDate}.`)>>
		<<set $activeFluffy.dueDate = 7>>
	<</if>>

	<<if $activeFluffy.specialFriend >= 0>>
		<<if ndef $globalFluffies[$activeFluffy.specialFriend]>>
			<<run console.log(`ERROR: [endWeek.tw]: Non Defined Special friend found.`)>>
			<<set $activeFluffy.specialFriend = -1>>
		<<else>>
			<<if $globalFluffies[$activeFluffy.specialFriend].dead == true>>
				<<run console.log(`ERROR: [endWeek.tw]: Dead Special friend found.`)>>
				<<set $activeFluffy.specialFriend = -1>>
			<</if>>
			<<if $globalFluffies[$activeFluffy.specialFriend].sold == true>>
				<<run console.log(`ERROR: [endWeek.tw]: Sold Special friend found.`)>>
				<<set $activeFluffy.specialFriend = -1>>
			<</if>>
		<</if>>
		
		<<if $ourStore.fluffies.includes($activeFluffy.specialFriend) == false>>
			<<run console.log(`ERROR: [endWeek.tw]: Invalid Special friend found.`)>>
			<<set $activeFluffy.specialFriend = -1>>
		<</if>>
	<</if>>

	/* First some tedius house keeping: */
	<<pruneTraits $activeFluffy>>

	<<if ndef $activeFluffy.name>>
		<<set $activeFluffy.name = "Fluffy">>
	<</if>>
	<<if ndef $activeFluffy.gender>>
		<<set $activeFluffy.gender = "Female">>
	<</if>>
	<<if ndef $activeFluffy.geneString>>
		<<if $activeFluffy.gender == "Male">>
			<<set _geneSTR = $grandfatherGene>>
		<<else>>
			<<set _geneSTR = $grandmotherGene>>
		<</if>>
	<</if>>
	<<if ndef $activeFluffy.weekAcquired>>
		<<set $activeFluffy.weekAcquired = 0>>
	<</if>>
	<<if ndef $activeFluffy.ID>>
		<<set $activeFluffy.ID = $ourStore.fluffies[_ef]>>
	<</if>>
	<<if ndef $activeFluffy.specialFriend>>
		<<set $activeFluffy.specialFriend = -1>>
	<</if>>
	<<if ndef $activeFluffy.pregnant>>
		<<set $activeFluffy.pregnant = false>>
	<</if>>
	<<if ndef $activeFluffy.pregnantBy>>
		<<set $activeFluffy.pregnantBy = -1>>
	<</if>>
	<<if ndef $activeFluffy.ageWeeks>>
		<<set $activeFluffy.ageWeeks = -1>>
	<</if>>
	<<if ndef $activeFluffy.foodType>>
		<<set $activeFluffy.foodType = "Kibble">>
	<</if>>
	
	/* Age up a week. */
	<<set $activeFluffy.ageWeeks++>>
	
	/* turn 52 weeks into a year */
	<<if Number($activeFluffy.ageWeeks) > 52>>
		<<set $activeFluffy.ageWeeks = 0>>
		<<set $activeFluffy.age++>>
	<</if>>
	
	<<checkAgeCategory>>

	<<switch $activeFluffy.foodType>>
		<<case "Kibble">>
			<<set _feedCost = Number(Number(_feedCost) + Number($foodPrice.kibble[$activeFluffy.foodQuality])).toFixed(2)>>
		<<case "Greens">>
			<<set _feedCost = Number(Number(_feedCost) + Number($foodPrice.greens[$activeFluffy.foodQuality])).toFixed(2)>>
		<<case "Sketti">>
			<<set _feedCost = Number(Number(_feedCost) + Number($foodPrice.sketti[$activeFluffy.foodQuality])).toFixed(2)>>
		<<case "Formula">>
			<<set _feedCost = Number(Number(_feedCost) + Number($foodPrice.formula[$activeFluffy.foodQuality])).toFixed(2)>>
		<<case "Default">>
			<<set _feedCost = 0>>
	<</switch>>

	/* < 1 year old */
	<<if $activeFluffy.ageCategory <= 4>>
		<<set $ourStore.foals++>>

	<<elseif $activeFluffy.gender == "male">>
		<<set $ourStore.stallions++>>
	<<else>>
		<<set $ourStore.mares++>>
	<</if>>

	/* some logic checking */
	<<if ndef $activeFluffy.nursing>>
		<<set $activeFluffy.nursing = []>>
	<</if>>
	/*
	<<if $activeFluffy.nursing < 0>>
		<<set $activeFluffy.nursing = 0>>
	<</if>>
	*/

	/* Logic check if mother is no longer in the store: */
	<<if $activeFluffy.foodType == "Nursing" && $ourStore.fluffies.includes($activeFluffy.mother) == false>>
		<br><<- $activeFluffy.name>> can't find it's mother!
		<<set $activeFluffy.foodType = "Nothing">>
	<</if>>

	/* ***
	 *	Remove fluffies that die due to old age.
	 *** */
	<<if Number($activeFluffy.maxAge) <= Number($activeFluffy.age)>>
		<<if random(0, 1) == 1>>
			<br><<print $activeFluffy.name>> does not wake up.  ($activeFluffy.age /  $activeFluffy.maxAge years old)
			<br>
			<<removeFluffy $activeFluffy "kill">>
			
			<<continue>>
		<</if>>
	<</if>>

	/* Trauma ticks */
	/*
	 * 200 - Morbidity
	 */
	<<if $activeFluffy.trauma >= 200>>
		/* Deaded */
		<br><<print $activeFluffy.name>> has died due to injury. 
		<br>
		<<removeFluffy $activeFluffy "kill">>
		<<continue>>
	/*
	 * 180 - Increase without treatment, increasing risk of death
	 */
	<<elseif $activeFluffy.trauma >= 180>>
		<<if random(0, 2) == 0>>
			/* Deaded */
			<br><<print $activeFluffy.name>> has died from wounds. 
			<br>
			<<removeFluffy $activeFluffy "kill">>
			<<continue>>
		<<else>>
			<br>
			<<fluffSpeech 'fluffy_suffering_default' $activeFluffy>>
			<<set $activeFluffy.stress += 5>>
			<<set $activeFluffy.trauma += 5>>
			<<set $activeFluffy.temperament -= 5>>
			<<set $activeFluffy.happy -= 5>>
		<</if>>
	/*
	 * 160 - Increasing risk of death
	 */
	<<elseif $activeFluffy.trauma >= 160>>
		<<if random(0, 4) == 0>>
			<br><<print $activeFluffy.name>> has died from wounds. 
			<br>
			<<removeFluffy $activeFluffy "kill">>
			<<continue>>
		<<else>>
			<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> is suffering from wounds. 
			<<fluffSpeech 'fluffy_suffering_default' $activeFluffy>>
			<<set $activeFluffy.temperament -= 4>>
			<<set $activeFluffy.happy -= 4>>
		<</if>>
	/*
	 * 140 - Risk of death
	 */
	<<elseif $activeFluffy.trauma >= 140>>
		<<if random(0, 6) == 0>>
			<br><<print $activeFluffy.name>> has died from wounds. 
			<br>
			<<removeFluffy $activeFluffy "kill">>
			<<continue>>
		<<else>>
			<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> is suffering from wounds. 
			<<fluffSpeech 'fluffy_suffering_default' $activeFluffy>>
			<<set $activeFluffy.temperament -= 3>>
			<<set $activeFluffy.happy -= 3>>
		<</if>>
	/*
	 * 120 - No healing
	 */
	<<elseif $activeFluffy.trauma >= 120>>
		<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> is suffering from wounds. 
		<<fluffSpeech 'fluffy_suffering_default' $activeFluffy>>
		<<set $activeFluffy.temperament -= 2>>
		<<set $activeFluffy.happy -= 2>>
	/*
	 * 80 - Trauma decays into stress
	 */
	<<elseif $activeFluffy.trauma >= 80>>
		<<set $activeFluffy.trauma -= 1>>
		<<set $activeFluffy.stress += 5>>
		<<set $activeFluffy.temperament -= 1>>
		<<set $activeFluffy.happy -= 1>>
	/*
	 * 40 - Slow healing
	 */
	<<elseif $activeFluffy.trauma >= 40>>
		<<set $activeFluffy.trauma -= 1>>
	/*
	 * 20 - Normal Healing
	 */
	<<elseif $activeFluffy.trauma >= 20>>
	 	<<set $activeFluffy.trauma -= 1>>
	/*
	 * 10 - quick healing
	 */
	<<else>>
		<<set $activeFluffy.trauma -= 2>>
	<</if>>
	
	/* Stress ticks */
	/*
	 * 200 - Morbidity
	 */
	<<if $activeFluffy.stress >= 200>>
		/* Deaded */
		<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> has died from stress. 
		<br>
		<<removeFluffy $activeFluffy "kill">>
		<<continue>>
	/*
	 * 180 - Increase without treatment, increasing risk of death
	 */
	<<elseif $activeFluffy.stress >= 180>>
		<<if random(0, 2) == 0>>
			/* Deaded */
			<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> has died from stress. 
			<br>
			<<removeFluffy $activeFluffy "kill">>
			<<continue>>
		<<else>>
			<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> is suffering from stress. 
			<<fluffSpeech 'fluffy_suffering_mental' $activeFluffy>>
			<<set $activeFluffy.stress += 10>>
			<<set $activeFluffy.trauma += 2>>
			<<set $activeFluffy.temperament -= 4>>
			<<set $activeFluffy.happy -= 4>>
		<</if>>
	/*
	 * 160 - Increasing risk of death
	 */
	<<elseif $activeFluffy.stress >= 160>>
		<<if random(0, 4) == 0>>
			<br><<print $activeFluffy.name>> has died from stress. 
			<br>
			<<removeFluffy $activeFluffy "kill">>
			<<continue>>
		<<else>>
			<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> is suffering from stress. 
			<<fluffSpeech 'fluffy_suffering_mental' $activeFluffy>>
			<<set $activeFluffy.temperament -= 3>>
			<<set $activeFluffy.happy -= 3>>
		<</if>>
	/*
	 * 140 - Risk of death
	 */
	<<elseif $activeFluffy.stress >= 140>>
		<<if random(0, 6) == 0>>
			<br><<print $activeFluffy.name>> has died from stress. 
			<br>
			<<removeFluffy $activeFluffy "kill">>
			<<continue>>
		<<else>>
			<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> is suffering from stress. 
			<<fluffSpeech 'fluffy_suffering_mental' $activeFluffy>><<set $activeFluffy.temperament -= 2>>
			<<set $activeFluffy.happy -= 2>>
		<</if>>
	/*
	 * 120 - No healing
	 */
	<<elseif $activeFluffy.stress >= 120>>
		<br><<colorizeText $activeFluffy.cColor.hex $activeFluffy.name>> is suffering from stress. 
		<<fluffSpeech 'fluffy_suffering_mental' $activeFluffy>>
	/*
	 * 100 - Stress decays into Trauma
	 */
	<<elseif $activeFluffy.stress >= 100>>
		<<set $activeFluffy.trauma += 1>>
		<<set $activeFluffy.stress -= 5>>
		<<set $activeFluffy.temperament -= 1>>
		<<set $activeFluffy.happy -= 1>>

	/*
	 * 40 - Slow healing; blocked if trauma is over 59
	 */
	<<elseif $activeFluffy.stress >= 40>>
		<<if $activeFluffy.trauma < 60>>
			<<set $activeFluffy.stress -= 5>>
		<</if>>
	/*
	 * 20 - Normal Healing; blocked if trauma is over 59
	 */
	<<elseif $activeFluffy.stress >= 20>>
		<<if $activeFluffy.trauma < 60>>
	 		<<set $activeFluffy.stress -= 5>>
	 	<</if>>
	/*
	 * 10 - quick healing; blocked if trauma is over 59
	 */
	<<else>>
		<<if $activeFluffy.trauma < 60>>
			<<set $activeFluffy.stress -= 10>>
		<</if>>
	<</if>>

	/* ***
	 *	Temperament ticks
	 *
	 *** */
	


	/* Lowest Temperament a smarty can generate - 110-130 depending on difficulty settings: */

	<<set _smartyBase = Number(Number(130) - Number(Number($smartySyndrom) * Number(10)))>>

	<<if $activeFluffy.temperament >= _smartyBase && $activeFluffy.ageCategory >= 3>>

		/* Random chance to not fire at all: */
		<<if $smartySyndrom > random(0, 10)>>
			/* An existing smarty has a 1/4 chance of fireing an event. */
			<<if $activeFluffy.traits.includes("Smarty")>>
				<<if random(0,3) == 0>>
					<<run $eventList.push( { target: _ef, type: "Smarty" } )>>
				<</if>>

			/* Check if this fluffy may become a smarty: */
			<<else>>
				/* The threshold is Temperament (0-200) minus both Training (0-200) and Trust (0-200) */
				/* This may be from -200 up to 200 */
				/* Divide by 2 and normalize to 0 to 100 */
				<<set _smartyThreshold = Number($activeFluffy.temperament)>>
				<<set _smartyThreshold = Number(Number(_smartyThreshold) - Number($activeFluffy.training))>>
				<<set _smartyThreshold = Number(Number(_smartyThreshold) - Number($activeFluffy.trust))>>
				<<set _smartyThreshold = Math.trunc(Number((Number(_smartyThreshold) + 200) / 4))>>

				<<set _smartyChance = 0>>

				/* Odds are based on personality: */
				<<personalityFix $activeFluffy>>

				<<switch $activeFluffy.personality>>
					<<case "Fussy", "Bossy", "Haughty", "Rowdy">>
						/* 70% chance at max threshold: */
						<<set _smartyThreshold = Math.trunc(Number(Number(_smartyThreshold) * Number(0.70)))>>
					<<case "Diligent", "Curious", "Peppy", "Playful">>
						/* 30% chance at max threshold: */
						<<set _smartyThreshold = Math.trunc(Number(Number(_smartyThreshold) * Number(0.30)))>>
					<<case "Lazy", "Cute", "Dull">>
						/* 20% chance at max threshold: */
						<<set _smartyThreshold = Math.trunc(Number(Number(_smartyThreshold) * Number(0.20)))>>
					<<case "Shy", "Timid", "Pensive", "Sweet">>
						/* 05% chance at max threshold: */
						<<set _smartyThreshold = Math.trunc(Number(Number(_smartyThreshold) * Number(0.05)))>>
					<<default>>
						<<run console.log(`ERROR: [endWeek]: Defaulted personality, maybe ${$activeFluffy.personality} is empty string?`)>>
						<<set _smartyThreshold = Math.trunc(Number(Number(_smartyThreshold) * Number(0.05)))>>
				<</switch>>

				/*** ***********************************************
				* Check if this fluffy may become a smarty:
				*
				* _smartyThreshold (temp-(training+trust)) vs personalty 0-(50/100/150/200)
				*
				* So 0-100 > random (0, 90|80|60|20) we get a smarty.
				*
				* If threshold is 0 or less, this will always fail.
				* 
				*** **********************************************/

				<<set _ran = Number(random(1, 100))>>

				<<if _smartyThreshold > _ran>>
					<<run $eventList.push( { target: _ef, type: "Smarty" } )>>
				<</if>>
			<</if>>
		<</if>>
	<</if>>


	/* ***
	 *	Create a deck of 'cards' for customer wants, based on the fluffies we have on display.
	 *** */
	<<if $activeFluffy.onDisplay == true>>

		/* Random chance based on repuation, higher rep better odds of getting a customer. */
		<<if random(-8, 8) <= Number($reputation/100)>>
			/* Push to event stack */
			<<run $eventCustomer.push( { target: -1, type: "Customer" } )>>
		<</if>>
	<</if>>

	/* ***
	 *	Feed them.
	 *** */
	 <<set _foodBonus = 0>>
	 <<if $activeFluffy.foodType != "Nothing" && $activeFluffy.traits.includes('Starving')>>
		<<run $eventStarvation.push({ target: $activeFluffy.ID, enable: false })>>
	 <</if>>
	 <<switch $activeFluffy.foodType>>
	 	<<case "Kibble">>
	 		<<if $activeFluffy.foodQuality > 3>>
	 		/* Quality has some boni */
	 			<<set $activeFluffy.happy += 10>>
	 			<<set $activeFluffy.stress -= 10>>
	 			<<set $activeFluffy.trauma -= 10>>
	 			<<set $activeFluffy.temperament++>>
			<<elseif $activeFluffy.foodQuality > 2>>
	 		/* Good */
	 			<<set $activeFluffy.happy += 8>>
	 			<<set $activeFluffy.trust += 8>>
	 			<<set $activeFluffy.stress -= 8>>
			<<elseif $activeFluffy.foodQuality > 1>>
	 		/* Basic */
	 			<<set $activeFluffy.happy += 5>>
	 			<<set $activeFluffy.trust += 5>>
	 			<<set $activeFluffy.stress -= 5>>
	 		<<elseif $activeFluffy.foodQuality < 2>>
	 		/* Cheap */
	 			<<set $activeFluffy.happy += 3>>
	 			<<set $activeFluffy.trust += 3>>
	 			<<set $activeFluffy.stress -= 3>>
	 		<<elseif $activeFluffy.foodQuality < 1>>
	 		/* Trash */
	 			<<set $activeFluffy.happy -= 5>>
	 			<<set $activeFluffy.stress += 5>>
	 			<<set $activeFluffy.trauma++>>
	 			<<set $activeFluffy.temperament-->>
	 		<</if>>

	 	<<case "Greens">>
	 		<<if $activeFluffy.foodQuality > 3>>
	 		/* Quality */
	 			<<set $activeFluffy.happy += 15>>
	 			<<set $activeFluffy.stress -= 15>>
	 			<<set $activeFluffy.trauma -= 15>>
	 			<<set $activeFluffy.temperament++>>
			<<elseif $activeFluffy.foodQuality > 2>>
	 		/* Good */
	 			<<set $activeFluffy.happy += 10>>
	 			<<set $activeFluffy.trust += 10>>
	 			<<set $activeFluffy.stress -= 10>>
	 			<<set $activeFluffy.temperament++>>
			<<elseif $activeFluffy.foodQuality > 1>>
	 		/* Basic */
	 			<<set $activeFluffy.happy += 8>>
	 			<<set $activeFluffy.trust += 8>>
	 			<<set $activeFluffy.stress -= 8>>
	 		<<elseif $activeFluffy.foodQuality < 2>>
	 		/* Cheap has some malus */
	 			<<set $activeFluffy.happy += 5>>
	 			<<set $activeFluffy.stress -= 5>>
	 			<<set $activeFluffy.trauma -= 5>>
	 		<<elseif $activeFluffy.foodQuality < 1>>
	 		/* Trash has more malus */
	 			<<set $activeFluffy.happy -= 3>>
	 			<<set $activeFluffy.stress += 3>>
	 			<<set $activeFluffy.trauma++>>
	 			<<set $activeFluffy.temperament-->>
	 		<</if>>
	 		
	 	<<case "Sketti">>
	 		<<if $activeFluffy.foodQuality > 3>>
	 		/* Quality */
	 			<<set $activeFluffy.happy += 20>>
	 			<<set $activeFluffy.trust += 20>>
	 			<<set $activeFluffy.stress -= 20>>
	 			<<set $activeFluffy.temperament += 15>>
	 		<<elseif $activeFluffy.foodQuality > 2>>
	 		/* Good */
	 			<<set $activeFluffy.happy += 15>>
	 			<<set $activeFluffy.trust += 15>>
	 			<<set $activeFluffy.stress -= 15>>
	 			<<set $activeFluffy.temperament += 10>>
	 		<<elseif $activeFluffy.foodQuality > 1>>
	 		/* Basic */
	 			<<set $activeFluffy.happy += 10>>
	 			<<set $activeFluffy.trust += 10>>
	 			<<set $activeFluffy.stress -= 10>>
	 			<<set $activeFluffy.temperament += 5>>
			<<elseif $activeFluffy.foodQuality === 1>>
	 		/* Cheap */
	 			<<set $activeFluffy.happy += 8>>
	 			<<set $activeFluffy.trust += 8>>
	 			<<set $activeFluffy.stress -= 8>>
	 			<<set $activeFluffy.temperament++>>
	 		<<elseif $activeFluffy.foodQuality < 1>>
	 		/* Trash */
	 			<<set $activeFluffy.happy++>>
				<<set $activeFluffy.temperament++>>
	 			<<set $activeFluffy.stress-->>
	 		<</if>>
	 		
	 	<<case "Nothing">>
	 		/* Quality doesn't matter */
			<<set $activeFluffy.stress += 20>>
			<<set $activeFluffy.trauma += 20>>
			<<set $activeFluffy.happy -= 20>>
 			<<set $activeFluffy.trust -= 20>>
 			<<set $activeFluffy.temperament -= 20>>

			<<run $eventStarvation.push({ target: $activeFluffy.ID, enable: true })>>
	 <</switch>>
	 

	/* ***
	 *	Grow foals.
	 *** */
	<<if $activeFluffy.ageCategory < 6>>

	 	<<set _wMultiBase = 0.0286>>
	 	<<set _wMultiAdd = 0.0227>>
	 	<<set _lMultiBase = 0.22>>
	 	<<set _lMultiAdd = 0.0177>>
	 	<<set _newWMulti = Number(($activeFluffy.ageWeeks * 0.0227)).toFixed(4)>>
	 	<<set _newWMulti = Number(Number(_newWMulti) + Number(_wMultiBase)).toFixed(4)>>
	 	<<set _lengthRatio = Number($activeFluffy.maxLength / $activeFluffy.maxWeight).toFixed(3)>>
	 	<<set _heightRatio = Number($activeFluffy.maxHeight / $activeFluffy.maxWeight).toFixed(3)>>

		<<set _mom = $globalFluffies[$activeFluffy.mother]>>
		
		<<if $activeFluffy.foodType == "Nursing">>
			<<if _mom.nursingMax < _mom.nursing.length>>
	 			<<set _newWMulti = Number(_newWMulti * 0.95).toFixed(3)>>
				<<run $activeFluffy.furStage += 4>>
	 		<</if>>
		<<elseif $activeFluffy.foodType == "Nothing">>
			<<set _newWMulti = Number(_newWMulti * 0.50).toFixed(3)>>
	 	<<else>> 
	 		<<switch $activeFluffy.foodQuality>>
	 			<<case 1>>
	 				<<set _newWMulti = Number(_newWMulti * 0.9).toFixed(3)>>
					 <<set _adder = Number(Number($activeFluffy.coatLength) * Number(0.20)).toFixed(0)>>
					<<run $activeFluffy.furStage += Number(_adder)>>
	 			<<case 2>>
	 				<<set _newWMulti = Number(_newWMulti * 1.1).toFixed(3)>>
					<<set _adder = Number(Number($activeFluffy.coatLength) * Number(0.30)).toFixed(0)>>
					<<run $activeFluffy.furStage += Number(_adder)>>
	 			<<case 3>>
	 				<<set _newWMulti = Number(_newWMulti * 1.1).toFixed(3)>>
					<<set _adder = Number(Number($activeFluffy.coatLength) * Number(0.40)).toFixed(0)>>
					<<run $activeFluffy.furStage += Number(_adder)>>
	 			<<case 4>>	 		
	 				<<set _newWMulti = Number(_newWMulti * 1.2).toFixed(3)>>
					<<set _adder = Number(Number($activeFluffy.coatLength) * Number(0.50)).toFixed(0)>>
					<<run $activeFluffy.furStage += Number(_adder)>>
	 			<<default>> /* 0 */
	 				<<set _newWMulti = Number(_newWMulti * 0.80).toFixed(3)>>
					<<set _adder = Number(Number($activeFluffy.coatLength) * Number(0.10)).toFixed(0)>>
					<<run $activeFluffy.furStage += Number(_adder)>>
	 		<</switch>>
		<</if>>


		<<set _newW = Number($activeFluffy.maxWeight * _newWMulti).toFixed(3)>>
		<<set $activeFluffy.weight = Number(_newW).toFixed(3)>>
		
	 	<<set _newL = Number($activeFluffy.weight * _lengthRatio).toFixed(3)>>
	 	<<set _newH = Number($activeFluffy.weight * _heightRatio).toFixed(3)>>
	 	
	 	<<set $activeFluffy.height = Number(_newL).toFixed(2)>>
		<<set $activeFluffy.length = Number(_newH).toFixed(2)>>

		<<if ($activeFluffy.weight / $activeFluffy.maxWeight) > 0.14 && $activeFluffy.weaned == false>> 	
	 		/*<<set $globalFluffies[$activeFluffy.mother].nursing-->>*/
			 <<set $globalFluffies[$activeFluffy.mother].nursing.delete(_ef)>>

			<br><<print $activeFluffy.name>> is ready for solid food
	 		<<if $activeFluffy.foodType == "Nothing">>
	 			, if it was being fed.
	 		<<else>>
	 			.
	 			<<set $activeFluffy.foodType = $globalFluffies[$activeFluffy.mother].foodType>>
	 			<<set $activeFluffy.foodQuality = $globalFluffies[$activeFluffy.mother].foodQuality>>
	 		<</if>>
	 		
	 		<<set $activeFluffy.weaned = true>>

	 		<<if $globalFluffies[$activeFluffy.mother].length == 0>>
	 			<br><<print $globalFluffies[$activeFluffy.mother].name>> is done nursing.
	 		<</if>> 
	 	<</if>>
	<<else>>
		<<run $activeFluffy.furStage += Number($activeFluffy.coatLength)>>
	<</if>>

	/* ***
	 *	Check for maturity and update traits:
	 *** */
	<<if $activeFluffy.ageCategory >= 5>>
		<<switch $activeFluffy.personality>>
			<<case "Fussy">>
				<<if random(0, 1) == 0>>
					<<set $activeFluffy.personality = "Diligent">>
					<<set $activeFluffy.learning++>>
					<<set $activeFluffy.temperament += 20>>
					<<set $activeFluffy.happy -= 10>>
				<<else>>
					<<set $activeFluffy.personality = "Bossy">>
					<<set $activeFluffy.charm-->>
					<<set $activeFluffy.temperament += 30>>
					<<set $activeFluffy.happy -= 10>>
				<</if>>
			<<case "Shy">>
				<<if random(0, 1) == 0>>
					<<set $activeFluffy.personality = "Curious">>
					<<set $activeFluffy.energy++>>
				<<else>>
					<<set $activeFluffy.personality = "Timid">>
					<<set $activeFluffy.strength-->>
					<<set $activeFluffy.happy -= 10>>
				<</if>>
			<<case "Lazy">>
				<<if random(0, 1) == 0>>
					<<set $activeFluffy.personality = "Pensive">>
					<<set $activeFluffy.learning++>>
				<<else>>
					<<set $activeFluffy.personality = "Dull">>
					<<set $activeFluffy.energy-->>
				<</if>>
			<<case "Peppy">>
				<<if random(0, 1) == 0>>
					<<set $activeFluffy.personality = "Playful">>
					<<set $activeFluffy.charm++>>
					<<set $activeFluffy.temperament -= 10>>
					<<set $activeFluffy.happy += 10>>
				<<else>>
					<<set $activeFluffy.personality = "Rowdy">>
					<<set $activeFluffy.charm-->>
					<<set $activeFluffy.temperament += 10>>
					<<set $activeFluffy.happy += 10>>
				<</if>>
			<<default>> /* "Cute" */
				<<if random(0, 1) == 0>>
					<<set $activeFluffy.personality = "Sweet">>
					<<set $activeFluffy.learning++>>
					<<set $activeFluffy.temperament -= 10>>
					<<set $activeFluffy.happy += 10>>
				<<else>>
					<<set $activeFluffy.personality = "Haughty">>
					<<set $activeFluffy.learning-->>
					<<set $activeFluffy.temperament += 20>>
					<<set $activeFluffy.happy -= 10>>
				<</if>>
		<</switch>>
	<</if>>

	<<clampValues $activeFluffy>>

	/* ***
	 *	Check for breeding pairs, and make some babies.
	 *	need to change this to a preg status change
	 *** */
	<<if $activeFluffy.gender == "female">>
		
		<<if $activeFluffy.specialFriend != -1 && $activeFluffy.pregnant == false && $activeFluffy.nursing <= 0>>
			/* Push to event stack  */
			<<run $eventMating.push($activeFluffy.ID)>>
		<</if>>
		
		<<if $activeFluffy.pregnant>>
			<<if $activeFluffy.dueDate <= 0>>
				/* Push to event stack  */
				<<run $eventBirths.push($activeFluffy.ID)>>
				
				<<set $activeFluffy.dueDate = -1>>
				<<set $activeFluffy.pregnant = false>>

			<<elseif $activeFluffy.nursing.length > 0>>
				 <br><<- $activeFluffy.name>> is nursing foals.
			<<else>>
				<<if $activeFluffy.dueDate < 0>>
					<<set $activeFluffy.dueDate = -1>>
					<<set $activeFluffy.pregnant = false>>
					<<set $activeFluffy.litter = 0>>
					<<set $activeFluffy.pregnantBy = -1>>
				<<else>>
					<<set $activeFluffy.dueDate-->>
				<</if>>
			<</if>>
		<<else>>
			<<set $activeFluffy.dueDate = -1>>
		<</if>>

		<<run console.log(`DEBUG: endWeek: ${$activeFluffy.name} nursing ${$activeFluffy.nursing.length}.`)>>

		<<if $activeFluffy.nursing.length > 0>>
			<<for _child range $activeFluffy.nursing>>

				<<if ndef _child>>
					<<run console.log(`DEBUG: endWeek: ndef on _child.`)>>
				<<else>>

					<<set _childFluffy = $globalFluffies[_child]>>

					<<if ndef _childFluffy>>
						<<run $activeFluffy.nursing.delete(_child)>>
					<<else>>
						<<run console.log(`DEBUG: endWeek: Child ${_child} dead: ${_childFluffy.dead} sold ${_childFluffy.sold}.`)>>

						<<if _childFluffy.dead || _childFluffy.sold>>
							<<run $activeFluffy.nursing.delete(_child)>>
						<</if>>

						<<run console.log(`DEBUG: endWeek: Child ${_child} weaned: ${_childFluffy.weaned} ageCategory ${_childFluffy.ageCategory}.`)>>

						<<if _childFluffy.weaned || _childFluffy.ageCategory > 3>>
							<<run $activeFluffy.nursing.delete(_child)>>
						<</if>>

						<<if $ourStore.fluffies.includes(_child) == false>>
							<<run console.log(`Error: endWeek: Child ${_child} being nursed but not in store.`)>>
							<<run $activeFluffy.nursing.delete(_child)>>
						<</if>>
					<</if>>
				<</if>>
			<</for>>
		<</if>>
	<<elseif $activeFluffy.pregnant>>
	 	<<run console.log(`ERROR: endWeek: Male with pregnant flag set.`)>>
		<<set $activeFluffy.litter = 0>>
		<<set $activeFluffy.dueDate = -1>>
		<<set $globalFluffies[_efD].pregnant = false>>
		<<set $activeFluffy.pregnantBy = -1>>
		<<set $activeFluffy.nursingTime = 0>>
		<<set $activeFluffy.nursingMax = 0>>
		<<set $activeFluffy.nursing = []>>
	<</if>>

	/* ***
	 *	Caculate stress
	 *** */
	 
	 /* First get a value based on temperament: */
	 /* >= 190 - smarty */
	 <<if $activeFluffy.temperament >= 190>>
	 	<<set _thisStress = 4>>
	 
	 /* >= 130 - bratty */
	 <<elseif $activeFluffy.temperament >= 130>>
	 	<<set _thisStress = 3>>
	 
	 /* >= 70 - Normal */
	 <<elseif $activeFluffy.temperament >= 70>>
	 	<<set _thisStress = 2>>
	 
	 /* >= 10 - Meek */
	 <<elseif $activeFluffy.temperament >= 10>>
	 	<<set _thisStress = 1>>
	 /* < 10 - Afraid */
	 <<else>>
	 	<<set _thisStress = 2>>
	 <</if>>
	 
	 /* Then check based on personality: */
	 <<switch $activeFluffy.personality>>
		<<case "Fussy", "Bossy", "Haughty", "Rowdy">>
			<<set _thisStress = Number(_thisStress) + 3>>
		<<case "Diligent", "Curious", "Peppy", "Playful">>
			<<set _thisStress = Number(_thisStress) + 2>>
		<<case "Lazy", "Cute", "Dull">>
			<<set _thisStress = Number(_thisStress) + 1>>
		<<case "Shy", "Timid", "Pensive", "Sweet">>
			<<set _thisStress = Number(_thisStress) + 0>>
	 <</switch>>
	 
	 /* If this a foal being nursed by the mother, drop the stress: */
	 <<if $activeFluffy.foodType == "Nursing">>
	 	<<set _temp = Number(Number(_thisStress) / 80).toFixed(2)>>
	 <<else>>
	 	<<set _temp = Number(Number(_thisStress) / 8).toFixed(2)>>
	 <</if>>

	<<set _stressor = Number(Number(_stressor) + Number(_temp)).toFixed(2)>>

	<<set $globalFluffies[_ef] = $activeFluffy>>

<</for>> /* Close store loop */


/* ***
 *	Final expenses:
 *** */
<<script>>
	State.variables.costs = Number(Number(State.variables.costs) + Number(State.temporary.feedCost)).toFixed(2);
	State.variables.cashLastWeek = Number(State.variables.cash);
	State.variables.costs = Number(Math.clamp(State.variables.costs, 0, 10000000000)).toFixed(2);
<</script>>

<<cashMinus $costs>>

<br>Upkeep this week was $costs.

<<set _count = $ourStore.mares + $ourStore.foals + $ourStore.stallions>>

<<if _stressor < 1>>
	<<set _stressor = 1.00>>
<</if>>

<<set $stressUp = Number(_stressor)>>
<br>Stress this week was $stressUp.

<<set $stress = Number(Number($stress) + Number($stressUp))>>

/* Build stress event list: Check once for every 10 points of stress the player has*/
<<for _stressCount = 10; _stressCount <= $stress; _stressCount += 10>>

	/* Stress events are random, and more likely to fire at higher levels */
	<<if _stressCount >= random(0,199)>>
		<<run $eventStress.push(_stressCount)>>
	<</if>>
<</for>>
	


/%
 % Advance the date
%/
<<set $week++>>

<<script>>
    var date = new Date(State.variables.gameDate);
    date.setDate(date.getDate() + 7);

	State.variables.gameDate = date.toString();
	State.variables.day = date.getDay();
	State.variables.month = date.getMonth();
	State.variables.year = date.getFullYear();
<</script>>

<<set $actions = 10>>


/* Build the main event list from each sub list */
<<for _subEvent range $eventMating>>
	<<run $eventList.push( { target: _subEvent, type: "Mating" } )>>
<</for>>

<<for _subEvent range $eventBirths>>
	<<run $eventList.push( { target: _subEvent, type: "Birth" } )>>
<</for>>

<<set _customerCount = 0>>
<<for _subEvent range $eventCustomer>>
	<<set _customerCount++>>
	
	<<if _customerCount < 11>>
		<<run $eventList.push( { target: _subEvent, type: "Customer" } )>>
	<</if>>
<</for>>

<<for _subEvent range $eventStress>>
	<<run $eventList.push( { target: _subEvent, type: "Stress" } )>>
<</for>>

<<for _subEvent range $eventBirthRejection>>
	<<run $eventList.push( { target: _subEvent, type: "Rejection" } )>>
<</for>>

<<for _subEvent range $eventStarvation>>
	<<run $eventList.push( { target: _subEvent.target, enable:_subEvent.enable, type: "Starvation" } )>>
<</for>>

<<run $eventList.shuffle()>>

<br><br>[[CONTINUE|Event Main][$encyclopedia = 0, $nextButton = " "]]






</div>